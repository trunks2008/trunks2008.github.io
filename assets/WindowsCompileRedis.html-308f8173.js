import{_ as d,W as n,X as p,$ as t,Y as e,a0 as i,a1 as o,Z as a,C as s}from"./framework-9e67db09.js";const r={},g=a('<p>哈喽大家好啊，我是没事就愿意瞎捣鼓的Hydra。</p><p>不知道有没有小伙伴像我一样，平常开发中用的是windows操作系统，有时候想装点什么软件，一看只支持linux系统，无奈要么启动虚拟机、要么装在云服务器上。</p><p>这不前几天又是这样，刚想用一下Redis 6.x版本来尝试一下新特性，打开官网一看，好家伙我直呼内行，果然不支持windows系统：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e22df09d86524172af04acd1c4b71394~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>不过虽然redis的官网上不提供windows版本下载，但是这也难不倒我这个面向百度编程的小能手，一番查找后让我找到了微软在github上维护的几个可以在windows上运行的redis版本：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1720c91681334fb09699ee50b0d210d3~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>项目的git地址是 <code>https://github.com/MicrosoftArchive/redis/releases</code>，我翻了一下，微软维护了<code>2.x</code>和<code>3.x</code>的多个windows版本redis，不过比较遗憾，在维护到<code>3.0.504</code>正式版本后就放弃了更新。</p><p>不过问题不大，眼看微软撂挑子不干了，波兰的热心市民 Tomasz Poradowski 先生这时候站出来，继续开始提供可以在windows上运行的<code>4.x</code>和<code>5.x</code>版本的redis，并且从2017年到2022年一干就是5年。</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ef057296cd67406aa226593a59be7a7a~tplv-k3u1fbpfcp-zoom-1.image" alt="3" tabindex="0" loading="lazy"><figcaption>3</figcaption></figure><p>项目git地址是<code>https://github.com/tporadowski/redis/releases</code>，没错，其实我本地环境运行的<code>redis-5.0.9</code>就是以前从这里下载的，而且绿色版使用起来真的是干净又卫生，所以我强烈建议大家给这位老哥来一个Star支持一下。</p><p>不过绕了这么一大圈，我的问题还是没有解决啊，既然没有现成的可以在windows上运行的<code>redis6.x</code>版本，那我们干脆就来自己编译一个吧。</p><h2 id="初识cygwin" tabindex="-1"><a class="header-anchor" href="#初识cygwin" aria-hidden="true">#</a> 初识Cygwin</h2><p>首先介绍一下我们今天要用到的工具<strong>Cygwin</strong>，先简单看一下它的官网 <code>https://cygwin.com/</code>，上面很清晰的解释了几个容易引起大家混淆的问题：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4ec254bf5a8947a89d839eb1aa5d1ebb~tplv-k3u1fbpfcp-zoom-1.image" alt="15" tabindex="0" loading="lazy"><figcaption>15</figcaption></figure><p>先解释了cygwin是什么：</p><ul><li>cygwin是<code>GNU</code>和开源工具的大型集合，它提供了类似于在windows上运行linux发行版的模拟环境功能</li><li>cygwin是一个动态链接库<code>cygwin1.dll</code>，它提供了大量<code>POSIX</code>的API功能</li></ul><p>再纠正了大家的常见误区：</p><ul><li>cygwin并不能让原生的linux应用程序运行在windows上，如果想让它运行在windows上，那么你必须通过源代码重新构建你的应用</li><li>cygwin并不能神奇地让原生的windows应用程序感知到unix的功能，例如信号、伪终端等</li></ul><p>其实可以用一句话来概括一下它的功能，<strong>cygwin是一个可运行于原生windows系统上的POSIX兼容环境，可以通过重新编译将linux应用移植到windows中</strong>。</p><p>好了，这样简单了解一下cygwin的功能对我们来说暂时就足够了，下面我们看看如何使用它来编译windows版本redis。</p><h2 id="cygwin安装" tabindex="-1"><a class="header-anchor" href="#cygwin安装" aria-hidden="true">#</a> Cygwin安装</h2><p>下面我们先进行编译工具<code>Cygwin</code>的下载和安装，在它的官网上就可以直接下载，完成后就可以开始安装了。下面我会贴出一些需要特殊配置的步骤，如果没有特殊说明的话，那么直接痛快的点击下一步就可以了。</p><p>网络连接配置这里选择第二项，也就是直接连接，不需要任何代理方式：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/782d87ded9b14202b245448030660c9f~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在选择下载源这一步，先手动输入<code>User URL</code>，添加阿里云的镜像<code>http://mirrors.aliyun.com/cygwin</code>，点击<code>add</code>后再选择我们刚才添加的这个源，然后点击下一步：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b5e25b16fda74091a55d8aead17a3b0a~tplv-k3u1fbpfcp-zoom-1.image" alt="5" tabindex="0" loading="lazy"><figcaption>5</figcaption></figure><p>接下来选择需要下载安装的组件包，我们只需要下载我们编译相关的模块即可。先通过上面的搜索框进行定位，选择安装<code>Devel</code>模块下面的<code>make</code>、<code>gcc-core</code>，<code>gcc-g++</code>，以及<code>Libs</code>模块下的<code>libgcc1</code> 、<code>libgccpp1</code>，然后点击<code>New</code>这一列的<code>Skip</code>，选择要安装的版本号，全部添加完成后点击下一步：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6d949fc87f9e4352a7cfbc0117c5ae95~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>接下来会自动进行下载上面选择的模块，等待全部下载结束后安装就完成了：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cd2fc8741cc14a668e56a1e95f8fed52~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>安装完成后，我们运行<code>Cygwin64 Terminal</code>，通过命令检测可以看到<code>Status</code>为<code>OK</code>，表示cygwin运行正常：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/68be9bb65f014aec9fe427ab40b5d208~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="编译redis源码" tabindex="-1"><a class="header-anchor" href="#编译redis源码" aria-hidden="true">#</a> 编译redis源码</h2><p>准备好编译工具后，我们接下来先下载<code>redis6.x</code>版本的源码，<code>6.0.16</code>的下载地址为：</p>',34),f={href:"https://download.redis.io/releases/redis-6.0.16.tar.gz",target:"_blank",rel:"noopener noreferrer"},l=a(`<p>cygwin安装完成后，会在它的安装路径的<code>home</code>目录下，创建一个以你登录系统的用户名来命名的目录，我们把下载完成后的压缩包放到这个<code>cygwin64\\home\\\${user}</code>目录下，在cygwin命令行中先执行解压命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-xvf</span> redis-6.0.16.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用下面的命令先切换到解压后的根目录，然后执行编译和安装：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> redis-6.0.16 
<span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>点击回车，然后就开始漫长的等待吧，不得不说编译和安装的过程真的很慢，我这大概花了20分钟才全部完成。</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e4aaa29f1454466e9b5f4571fd86e654~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>不出意外的最后果然出现了意外，报了两个<code>Error</code>，不过貌似没有什么太大影响，切换到<code>src</code>目录下，就已经可以看到编译完成后已经生成了6个<code>exe</code>可执行文件了：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a835f1895e53413d83cadd8f049e6cba~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>但是如果这个时候双击<code>redis-server.exe</code>尝试进行启动的话，那么就会报错提示缺少<code>dll</code>动态链接库：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b4e3daf548d64b948a1e652f80251aa6~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>我们可以在cygwin的<code>bin</code>目录下找到这个文件，为了方便，把可执行文件、动态链接库文件、redis配置文件拷贝到一个单独的目录下再次尝试启动：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/08d6405849744febbf5e4050ca7f1baa~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这次能够正常启动成功，我们再使用客户端连接工具连接并进行测试，终于，6.0.16版本的redis可以在windows环境下正常运行了。</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2aef4a491c744d0db601ca5750e565d7~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="最后" tabindex="-1"><a class="header-anchor" href="#最后" aria-hidden="true">#</a> 最后</h2><p>忙活一大顿总算成功了，我们也终于可以在windows上体验<code>redis6.x</code>版本了，不过这里还是给小伙伴们提个醒，这样编译的redis我们平常自己在学习中体验一下就可以了，尽量不要用在生产上。</p><p>因为cygwin编译后的程序，相当于在windows系统上模拟实现了<code>POSIX</code>兼容层，应用程序在底层多了一层函数调用，因此效率比运行在linux系统的原生应用低了很多。因此，这样在windows上运行的redis，无疑会损失掉它引以为傲的高性能这一优势。</p><p>秉持着好东西就要分享的原则，我也已经把编译好的windows版<code>redis6.0.16</code>上传到了网盘，有需要的小伙伴们可以通过下面的方式获取：</p>`,18),u={href:"https://pan.baidu.com/s/1jlPVR0Odh_xjqBBb7gorWg",target:"_blank",rel:"noopener noreferrer"},b=e("p",null,"提取码：8386",-1);function m(h,w){const c=s("ExternalLinkIcon");return n(),p("div",null,[t(" more "),g,e("blockquote",null,[e("p",null,[e("a",f,[i("https://download.redis.io/releases/redis-6.0.16.tar.gz"),o(c)])])]),l,e("blockquote",null,[e("p",null,[i("链接："),e("a",u,[i("https://pan.baidu.com/s/1jlPVR0Odh_xjqBBb7gorWg"),o(c)])]),b])])}const k=d(r,[["render",m],["__file","WindowsCompileRedis.html.vue"]]);export{k as default};
