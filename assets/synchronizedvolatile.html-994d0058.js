const e=JSON.parse('{"key":"v-1d564c4a","path":"/concurrent/synchronizedvolatile.html","title":"并发编程基础盘点-synchronized与volatile","lang":"zh-CN","frontmatter":{"title":"并发编程基础盘点-synchronized与volatile","icon":"page","order":2,"author":"Hydra","date":"2020-04-26T00:00:00.000Z","tag":["并发","synchronized","volatile"],"star":true,"description":"在Java并发编程中，synchronized和`volatile是两个非常重要的关键字，它们可以用来控制并发中的互斥性与可见性，本文我们先来看看在并发环境下，synchronized应该如何使用，以及它能够如何保证互斥性与可见性。 在正式开始之前，我们首先来看一下互斥性和可见性的概念： 互斥性：即在同一时间只允许一个线程持有某个对象锁，通过这种特性来...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/concurrent/synchronizedvolatile.html"}],["meta",{"property":"og:site_name","content":"码农参上"}],["meta",{"property":"og:title","content":"并发编程基础盘点-synchronized与volatile"}],["meta",{"property":"og:description","content":"在Java并发编程中，synchronized和`volatile是两个非常重要的关键字，它们可以用来控制并发中的互斥性与可见性，本文我们先来看看在并发环境下，synchronized应该如何使用，以及它能够如何保证互斥性与可见性。 在正式开始之前，我们首先来看一下互斥性和可见性的概念： 互斥性：即在同一时间只允许一个线程持有某个对象锁，通过这种特性来..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-03T05:56:54.000Z"}],["meta",{"property":"article:author","content":"Hydra"}],["meta",{"property":"article:tag","content":"并发"}],["meta",{"property":"article:tag","content":"synchronized"}],["meta",{"property":"article:tag","content":"volatile"}],["meta",{"property":"article:published_time","content":"2020-04-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-03T05:56:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"并发编程基础盘点-synchronized与volatile\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-04-26T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-03T05:56:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hydra\\"}]}"]]},"headers":[{"level":2,"title":"synchronized","slug":"synchronized","link":"#synchronized","children":[{"level":3,"title":"1、同步非静态方法","slug":"_1、同步非静态方法","link":"#_1、同步非静态方法","children":[]},{"level":3,"title":"2、同步静态方法","slug":"_2、同步静态方法","link":"#_2、同步静态方法","children":[]},{"level":3,"title":"3、同步代码块","slug":"_3、同步代码块","link":"#_3、同步代码块","children":[]},{"level":3,"title":"原理","slug":"原理","link":"#原理","children":[]}]},{"level":2,"title":"volatile","slug":"volatile","link":"#volatile","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1680501414000,"updatedTime":1680501414000,"contributors":[{"name":"trunks2008","email":"jialegeyou1111@163.com","commits":1}]},"readingTime":{"minutes":11.77,"words":3530},"filePathRelative":"concurrent/synchronizedvolatile.md","localizedDate":"2020年4月26日","autoDesc":true}');export{e as data};
