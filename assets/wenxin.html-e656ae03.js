import{_ as e,W as o,X as c,$ as i,Y as n,a0 as s,a1 as t,Z as p,C as l}from"./framework-9e67db09.js";const u={},r=p(`<p>哈喽大家好啊，我是Hydra。</p><p>前两天，百度紧随<code>GPT-4</code>发布了自己的语言模型文心一言。</p><p>讲道理，对于国内能够发布这样一个敢于对标<code>CHAT GPT</code>的高质量语言模型，大家应该更多感受到的是赛博朋克与现实生活贴近的真实感，对这个模型应该有着更多的鼓励或赞美。</p><p>可不知是因为整个发布会搞的过于像没有好好准备的学生毕业答辩PPT，还是它的实际表现并没有那么如人意，大家貌似对文心一言并不那么买账。</p><p>于是我决定看一下知乎大神们对文心一言的评价，哪想到随便打开一个问题，居然有600多条回答…</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fa209b89de6d45bf8d2dbec3d248276a~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>要是我这一条一条翻完所有回答， 估计就得拿出一天来全职摸鱼了 ，那么有没有什么办法能够最快的分析出对待这个问题大家的综合评价呢？</p><p>那么今天就让我纱布擦屁股，给大家露一小手，写一个爬虫扒下来所有的回答，再对结果进行一下分析。</p><h2 id="webmagic" tabindex="-1"><a class="header-anchor" href="#webmagic" aria-hidden="true">#</a> WebMagic</h2><p>正式开始前，咱们得先搞定工具。虽然python写起爬虫来有天然的框架优势，不过鉴于大家都是搞java的，那么我们今天就用java框架来实现一个爬虫。</p><p>咱们要使用的工具 WebMagic，就是一款简单灵活的java爬虫框架，总体架构由下面这几部分构成：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cf480616824244b68e6075c4e30e285c~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li><code>Downloader</code>：负责从互联网上下载页面，以便后续处理。WebMagic默认使用了Apache HttpClient作为下载工具。</li><li><code>PageProcessor</code>：负责解析页面，抽取有用信息，以及发现新的链接。WebMagic使用Jsoup作为HTML解析工具，并基于其开发了解析XPath的工具Xsoup。</li><li><code>Scheduler</code>：负责管理待抓取的URL，以及一些去重的工作。WebMagic默认提供了JDK的内存队列来管理URL，并用集合来进行去重。也支持使用Redis进行分布式管理。</li><li><code>Pipeline</code>：负责抽取结果的处理，包括计算、持久化到文件、数据库等。WebMagic默认提供了输出到控制台和保存到文件两种结果处理方案。</li></ul><p>在4个主要组件中，除了<code>PageProcessor</code>之外，其他3个组件基本都可以复用。而我们实际爬虫中的重点，就是要针对不同网页进行页面元素的分析，进而定制化地开发不同的<code>PageProcessor</code>。</p><p>下面我们开始准备实战，先引入<code>webmagic</code>的<code>core</code>和<code>extension</code>两个依赖，最新<code>0.8.0</code>版本搞里头：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>us.codecraft<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>webmagic-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.8.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>us.codecraft<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>webmagic-extension<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.8.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pageprocessor-与-xpath" tabindex="-1"><a class="header-anchor" href="#pageprocessor-与-xpath" aria-hidden="true">#</a> PageProcessor 与 xpath</h3><p>在正式开始抓取页面前，我们先看看知乎上一个问题的页面是怎么构成的，还是以上面图中那个问题为例，原问题的地址在这里：</p>`,18),d={href:"https://www.zhihu.com/question/589929380",target:"_blank",rel:"noopener noreferrer"},k=p(`<p>我们先做个简单的测试，来获取这个问题的<strong>标题</strong>，以及<strong>对这个问题的描述</strong>。</p><p>通过浏览器的审查元素，可以看到标题是一个<code>h1</code>的标题元素，并且它的class属性是<code>QuestionHeader-title</code>，而问题的描述部分在一个<code>div</code>中，它的class中包含了<code>QuestionRichText</code>。</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/522587f45d13418ebb57704a433f565e~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>简单分析完了，按照前面说的，我们要对这个页面定制一个<code>PageProcessor</code>组件抽取信息，直接上代码。</p><p>新建一个类实现<code>PageProcessor</code>接口，并实现接口中的<code>process()</code>这个方法即可。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WenxinProcessor</span> <span class="token keyword">implements</span> <span class="token class-name">PageProcessor</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Site</span> site <span class="token operator">=</span> <span class="token class-name">Site</span><span class="token punctuation">.</span><span class="token function">me</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setRetryTimes</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSleepTime</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">Page</span> page<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> title <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getHtml</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">xpath</span><span class="token punctuation">(</span><span class="token string">&quot;//h1[@class=&#39;QuestionHeader-title&#39;]/text()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> question<span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getHtml</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">xpath</span><span class="token punctuation">(</span><span class="token string">&quot;//div[@class=&#39;QuestionRichText&#39;]//tidyText()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>question<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Site</span> <span class="token function">getSite</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> site<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Spider</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WenxinProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">addUrl</span><span class="token punctuation">(</span><span class="token string">&quot;https://www.zhihu.com/question/589929380&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">thread</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看运行结果：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/81a108278a254eb3962aff81d98df3b9~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>可以看到，在代码中通过<code>xpath()</code>这样一个方法，成功拿到了我们要取的两个元素。其实说白了，这个xpath也不是爬虫框架中才有的新玩意，而是一种XML路径语言（<code>XML Path Language</code>），是一种用来确定XML文档中某部分位置的语言。它基于XML的树状结构，提供在数据结构树中找寻节点的能力。</p><p>常用的路径表达式包括：</p><table><thead><tr><th>表达式</th><th>描述</th></tr></thead><tbody><tr><td>nodename</td><td>选取此节点的所有子节点。</td></tr><tr><td>/</td><td>从根节点选取。</td></tr><tr><td>//</td><td>从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置。</td></tr><tr><td>.</td><td>选取当前节点。</td></tr><tr><td>..</td><td>选取当前节点的父节点。</td></tr><tr><td>@</td><td>选取属性。</td></tr></tbody></table><p>在上面的代码中，<code>//h1[@class=&#39;QuestionHeader-title&#39;]</code>就表示选取一个类型为<code>h1</code>的节点，并且它有一个class为<code>QuestionHeader-title</code>的属性。</p><p>至于后面的<code>text()</code>和<code>tidyText()</code>方法，则是用于提取元素中的文本，这些函数不是标准xpath中的，而是webMagic中特有的新方法，这些函数的使用可以参考文档：</p>`,13),m={href:"http://webmagic.io/docs/zh/posts/ch4-basic-page-processor/xsoup.html",target:"_blank",rel:"noopener noreferrer"},v=p(`<p>看到这，你可能还有个问题，这里对于问题的描述部分没有显示完全，你需要在页面上点一下这个显示全部它才会显示详细的信息。</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/74793e9a1aad48468c2238e4adfbd899~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>没关系，这里先留个坑，这个问题放在后面解决。</p><h3 id="获取提问的答案" tabindex="-1"><a class="header-anchor" href="#获取提问的答案" aria-hidden="true">#</a> 获取提问的答案</h3><p>我们完善一下上面的代码，尝试获取问题的解答。按照老套路，还是先分析页面元素再用xpath写表达式获取。修改<code>process</code>方法：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">Page</span> page<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> contentPath<span class="token operator">=</span> <span class="token string">&quot;div[@class=&#39;QuestionAnswers-answers&#39;]&quot;</span><span class="token operator">+</span>
            <span class="token string">&quot;//div[@class=&#39;RichContent RichContent--unescapable&#39;]&quot;</span> <span class="token operator">+</span>
            <span class="token string">&quot;//div[@class=&#39;RichContent-inner&#39;]&quot;</span><span class="token operator">+</span>
            <span class="token string">&quot;/tidyText()&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> answerList <span class="token operator">=</span> page<span class="token punctuation">.</span><span class="token function">getHtml</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">xpath</span><span class="token punctuation">(</span>contentPath<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> answerList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;第&quot;</span><span class="token operator">+</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;条回答:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>answerList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;\\n=======&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的代码中，使用了<code>xpath</code>获取页面中具有相同属性的元素，并将它们存入了List列表中。看一下运行结果：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3c4ee3581ff54e1d94cba716f38df2f6~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>纳尼？这个问题明明有着689条的回答，为什么我们只爬到了两条答案？</p><p>如果你经常用知乎来学习<s>摸鱼</s>的话，其实就会知道对于这种有大量回答的问题，页面刚开始只会默认显示很少的几条的消息，随着你不断的下拉页面才会把新的回答显示出来。</p><p>那么如果我想拿到所有的评论应该怎么做呢？这时候就要引出webMagic中另一个神奇的组件Selenium了。</p><h2 id="selenium" tabindex="-1"><a class="header-anchor" href="#selenium" aria-hidden="true">#</a> Selenium</h2><p>简单来说，selenium是一个用于Web应用程序测试的工具，selenium测试可以直接运行在浏览器中，就像真正的用户在操作一样，并且目前主流的大牌浏览器一般都支持这项技术。</p><p>所以在爬虫中，我们可以通过编写模仿用户操作的selenium脚本，模拟进行一部分用互操作，比如点击事件或屏幕滚动等等。</p><p>WebMagic-Selenium需要依赖于WebDriver，所以我们先进行本地WebDriver的安装操作。</p><h3 id="安装webdriver" tabindex="-1"><a class="header-anchor" href="#安装webdriver" aria-hidden="true">#</a> 安装WebDriver</h3><p>查看自己电脑上Chrome版本，可以点击<code>设置</code>-&gt;<code>关于chrome</code>查看，也可以直接在地址栏输入<code>chrome://settings/help</code>：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c9f88d8be69a47009e5d2f5dfe6cb201~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>可以看到版本号，然后需要下载对应版本的WebDriver，下载地址：</p>`,19),g={href:"http://chromedriver.storage.googleapis.com/index.html",target:"_blank",rel:"noopener noreferrer"},b=p('<p>打开后，可以看到各个版本，选择与本地浏览器最接近的版本：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3e35016cae2442e8a214b30cab2534a7~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>点击进入后，根据我们的系统选择对应版本下载即可。</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8519f6839912445cb263c06ac5a52e7a~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>下载完成后，解压到本地目录中，之后在使用selenium模块中会使用到。这个文件建议放在chrome的安装目录下，否则之后在代码中可能会报一个<code>WebDriverException: unknown error: cannot find Chrome binary</code>找不到chrome文件的错误。</p><h3 id="修改selenium源码" tabindex="-1"><a class="header-anchor" href="#修改selenium源码" aria-hidden="true">#</a> 修改Selenium源码</h3><p>webMagic中已经封装了selenium模块的代码，但官方版本的代码有些地方需要修改，我们下载源码后要自己简单改动一下然后重新编译。我这下载了<code>0.8.1-SNAPSHOT</code>版本的代码，官方git地址：</p>',7),f={href:"https://github.com/code4craft/webmagic",target:"_blank",rel:"noopener noreferrer"},h=p(`<p>修改配置文件地址，在<code>WebDriverPool</code>将<code>selenium</code>配置文件路径写死了，需要改变配置路径：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 修改前</span>
<span class="token comment">// private static final String DEFAULT_CONFIG_FILE = &quot;/data/webmagic/webmagic-selenium/config.ini&quot;;</span>
<span class="token comment">// 修改后</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">DEFAULT_CONFIG_FILE</span> <span class="token operator">=</span> <span class="token string">&quot;selenium.properties&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在<code>resources</code>目录下添加配置文件<code>selenium.properties</code>：</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># What WebDriver to use for the tests</span>
<span class="token key attr-name">driver</span><span class="token punctuation">=</span><span class="token value attr-value">chrome</span>
<span class="token comment"># PhantomJS specific config (change according to your installation)</span>
<span class="token key attr-name">chrome_driver_loglevel</span><span class="token punctuation">=</span><span class="token value attr-value">DEBUG</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="js模拟页面操作" tabindex="-1"><a class="header-anchor" href="#js模拟页面操作" aria-hidden="true">#</a> js模拟页面操作</h3><p>修改<code>SeleniumDownloader</code>的<code>download()</code>方法，在代码中的这个位置，作者很贴心的给我们留了一行注释：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b3cfc055bd504255a8b440884ff45863~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>意思就是，你可以在这添加鼠标事件或者干点别的什么东西了。我们在这添加页面向下滚动这一模拟事件，每休眠2s就向下滚动一下页面，一共下拉20次：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//模拟下拉，刷新页面</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;休眠2s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">//滚动到最底部</span>
        <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">JavascriptExecutor</span><span class="token punctuation">)</span>webDriver<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">executeScript</span><span class="token punctuation">(</span><span class="token string">&quot;window.scrollTo(0,document.body.scrollHeight)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//休眠，等待加载页面</span>
        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//往回滚一点，否则不加载</span>
        <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">JavascriptExecutor</span><span class="token punctuation">)</span>webDriver<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">executeScript</span><span class="token punctuation">(</span><span class="token string">&quot;window.scrollBy(0,-300)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改完成后本地打个包，注意还要修改一下版本号，改成和发行版的不同即可，我这里改成了<code>0.8.1.1-SNAPSHOT</code>。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mvn clean <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="调用" tabindex="-1"><a class="header-anchor" href="#调用" aria-hidden="true">#</a> 调用</h3><p>回到之前的爬虫项目，引入我们自己打好的包：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>us.codecraft<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>webmagic-selenium<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.8.1.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改之前的主程序启动时的代码，添加<code>Downloader</code>组件，<code>SeleniumDownloader</code>构造方法的参数中传入我们下好的chrome的webDriver的可执行文件的地址：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Spider</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WenxinProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">addUrl</span><span class="token punctuation">(</span><span class="token string">&quot;https://www.zhihu.com/question/589929380&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">thread</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setDownloader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SeleniumDownloader</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\\\Program Files\\\\Google\\\\Chrome\\\\Application\\\\chromedriver.exe&quot;</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">setSleepTime</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>进行测试，可以看到在拉动了40秒窗口后，获取到的答案条数是100条：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b12c3e6b7838465da71564c14831cbc2~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>通过适当地添加下拉页面的循环的次数，我们就能够获取到当前问题下的全部回答了。</p><p>另外，在启动爬虫后我们会看到webDriver弹出了一个chrome的窗口，在这个窗口中有一个提示：<strong>Chrome正受到自动测试软件的控制</strong>，并且可以看到页面不断的自动下拉情况：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/41e944e6bdac46ac8be0ec8ec45c32c1~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如果不想要这个弹窗的话，可以修改selenium模块的代码进行隐藏。修改<code>WebDriverPool</code>的<code>configure()</code>方法，找到这段代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>driver<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token constant">DRIVER_CHROME</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	mDriver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ChromeDriver</span><span class="token punctuation">(</span>sCaps<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>添加一个隐藏显示的选项，并且在修改完成后，重新打包一下。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>driver<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token constant">DRIVER_CHROME</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token class-name">ChromeOptions</span> options<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ChromeOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	options<span class="token punctuation">.</span><span class="token function">setHeadless</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	mDriver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ChromeDriver</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取问题详细描述" tabindex="-1"><a class="header-anchor" href="#获取问题详细描述" aria-hidden="true">#</a> 获取问题详细描述</h3><p>不知道大家还记不记得在前面还留了一个坑，我们现在获取到的对问题的描述是不全的，需要点一下这个按钮才能显示完全。</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/26f1516bcf84480aa31693dece383c64~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>同样，这个问题也可以用selenium来解决，在我们下拉页面前，加上这么一个模拟点击事件，就可以获得对问题的详细描述了：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">JavascriptExecutor</span><span class="token punctuation">)</span>webDriver<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">executeScript</span><span class="token punctuation">(</span><span class="token string">&quot;document.getElementsByClassName(&#39;Button QuestionRichText-more&#39;)[0].click()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>看一下执行结果，已经可以拿到完整内容了：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f4341c205eb146b4bc8cf28b5b030c2d~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="pipeline" tabindex="-1"><a class="header-anchor" href="#pipeline" aria-hidden="true">#</a> Pipeline</h2><p>到这里，虽然要爬的数据获取到了，但是要进行分析的话，还需要进行持久化操作。在前面的webMagic的架构图中，介绍过<code>Pipeline</code>组件主要负责结果的处理，所以我们再优化一下代码，添加一个<code>Pipeline</code>负责数据的持久化。</p><p>由于数据量也不是非常大，这里我选择了直接存入ElasticSearch中，同时也方便我们进行后续的分析操作，ES组件我使用的是<code>esclientrhl</code>，为了方便我还是把项目整个扔到了 spring里面。</p><p>定制一个Pipeline也很简单，实现<code>Pipeline</code>接口并实现里面的<code>process()</code>接口就可以了，通过构造方法传入ES持久化层组件：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WenxinPipeline</span> <span class="token keyword">implements</span> <span class="token class-name">Pipeline</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ZhihuRepository</span> zhihuRepository<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">ResultItems</span> resultItems<span class="token punctuation">,</span> <span class="token class-name">Task</span> task<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> resultItems<span class="token punctuation">.</span><span class="token function">getAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> title <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> question <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;question&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> answer <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;answer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">ZhihuEntity</span> zhihuEntity<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> an <span class="token operator">:</span> answer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            zhihuEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ZhihuEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            zhihuEntity<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span>
            zhihuEntity<span class="token punctuation">.</span><span class="token function">setQuestion</span><span class="token punctuation">(</span>question<span class="token punctuation">)</span><span class="token punctuation">;</span>
            zhihuEntity<span class="token punctuation">.</span><span class="token function">setAnswer</span><span class="token punctuation">(</span>an<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                zhihuRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>zhihuEntity<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>把selenium向下拉取页面的次数改成200后，通过接口启动程序：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;wenxin&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">wenxin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token class-name">Request</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Request</span><span class="token punctuation">(</span><span class="token string">&quot;https://www.zhihu.com/question/589929380&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">WenxinProcessor4</span> wenxinProcessor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WenxinProcessor4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Spider</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>wenxinProcessor<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">addRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">addPipeline</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WenxinPipeline</span><span class="token punctuation">(</span>zhihuRepository<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setDownloader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SeleniumDownloader</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\\\Program Files\\\\Google\\\\Chrome\\\\Application\\\\chromedriver.exe&quot;</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">setSleepTime</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行完成后，查询一下es中的数据，可以看到，实际爬取到了673条回答。</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d7911827b9b9497886847e4d2bb3f62e~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>另外，我们可以在一个爬虫程序中传入多个页面地址，只要页面元素具有相同的规则，那么它们就能用相同的爬虫逻辑处理，在下面的代码中，我们一次性传入多个页面：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Spider</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WenxinProcessor4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">addUrl</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;https://www.zhihu.com/question/589941496&quot;</span><span class="token punctuation">,</span>
              <span class="token string">&quot;https://www.zhihu.com/question/589904230&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;https://www.zhihu.com/question/589938328&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">addPipeline</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WenxinPipeline</span><span class="token punctuation">(</span>zhihuRepository<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">setDownloader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SeleniumDownloader</span><span class="token punctuation">(</span><span class="token string">&quot;D:\\\\Program Files\\\\Google\\\\Chrome\\\\Application\\\\chromedriver.exe&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setSleepTime</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一顿忙活下来，最终扒下来1300多条数据。</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bfb3460a6d3f434fb5e735beb90ae7b5~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="分析" tabindex="-1"><a class="header-anchor" href="#分析" aria-hidden="true">#</a> 分析</h2><p>数据落到了ES里后，那我们就可以根据关键字进行分析了，我们先选择10个负面方向的词语进行查询，可以看到查到了403条数据，将近占到了总量的三分之一。</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c759db42cf714400a6501935f22c1cb2~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>再从各种回答中选择10个正向词语查询，结果大概只有负面方向的一半左右：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8dd107584b7b4212bb786d5af6688a94~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>不得不说，这届网友真的是很严厉…</p><h2 id="proxy代理" tabindex="-1"><a class="header-anchor" href="#proxy代理" aria-hidden="true">#</a> Proxy代理</h2><p>说到爬虫，其实还有一个绕不过去的东西，那就是代理。</p><p>像咱们这样的小打小闹，爬个百八十条数据虽然没啥问题，但是如果要去爬取大量数据或是用于商业，还是建议使用一下代理，一方面能够隐藏我们的IP地址起到保护自己的作用，另一方面动态IP也能有效的应对一些反爬策略。</p><p>个人在使用中，比较推荐的是<strong>隧道代理</strong>。简单的来说，如果你购买了IP服务的话，用普通代理方式的话需要你去手动请求接口获取IP地址，再到代码中动态修改。而使用隧道代理的话，就不需要自己提取代理IP了，每条隧道自动提取并使用代理IP转发用户请求，这样我们就可以专注于业务了。</p><p>虽然网上也有免费的代理能够能用，但要不然就是失效的太快，要不就是很容易被网站加入黑名单，所以如果追求性能的话还是买个专业点的代理比较好，虽然可能价格不那么便宜就是了。</p><h2 id="题外话" tabindex="-1"><a class="header-anchor" href="#题外话" aria-hidden="true">#</a> 题外话</h2><p>看了一大顿下来，从大家略显犀利的言辞来看，大家总体上对文心一言还是不那么满意的。毕竟，在有着<code>CHAT-GPT</code>这么一个优秀的产品做背景板的前提下，这届网友可能没有那么好糊弄。</p><p>但是话又说回来，丑媳妇总得见公婆不是？提早暴露缺陷，也有利于国内的这些大厂，看清和一流AI产品之间的真实差距，知难而进，迎头赶上。</p><p>那么，这次的分享就到这里，我是Hydra，我们下篇再见。</p>`,60),w={href:"https://github.com/trunks2008/zhihu-spider",target:"_blank",rel:"noopener noreferrer"},y=n("p",null,"参考资料：",-1),x={href:"http://webmagic.io/docs/zh/posts/ch1-overview/architecture.html",target:"_blank",rel:"noopener noreferrer"},q={href:"https://blog.csdn.net/panchang199266/article/details/85413746",target:"_blank",rel:"noopener noreferrer"};function j(S,P){const a=l("ExternalLinkIcon");return o(),c("div",null,[i(" more "),r,n("blockquote",null,[n("p",null,[n("a",d,[s("如何看待百度发布的文心一言?"),t(a)])])]),k,n("blockquote",null,[n("p",null,[n("a",m,[s("http://webmagic.io/docs/zh/posts/ch4-basic-page-processor/xsoup.html"),t(a)])])]),v,n("blockquote",null,[n("p",null,[n("a",g,[s("http://chromedriver.storage.googleapis.com/index.html"),t(a)])])]),b,n("blockquote",null,[n("p",null,[n("a",f,[s("https://github.com/code4craft/webmagic"),t(a)])])]),h,n("blockquote",null,[n("p",null,[s("文中代码已经传到我的git上啦，"),n("a",w,[s("https://github.com/trunks2008/zhihu-spider"),t(a)]),s(" ，欢迎大家来个star鼓励一下~")])]),n("blockquote",null,[y,n("p",null,[n("a",x,[s("http://webmagic.io/docs/zh/posts/ch1-overview/architecture.html"),t(a)])]),n("p",null,[n("a",q,[s("https://blog.csdn.net/panchang199266/article/details/85413746"),t(a)])])])])}const _=e(u,[["render",j],["__file","wenxin.html.vue"]]);export{_ as default};
