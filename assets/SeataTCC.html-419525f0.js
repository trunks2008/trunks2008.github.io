import{_ as n,W as s,X as a,$ as t,Z as p}from"./framework-9e67db09.js";const o={},c=p(`<p>在前面的文章中，我们学习了Seata的搭建以及AT模式的使用，通过实践可以发现在AT模式下，用户只需要关注自己的业务，具体分布式事务的处理过程对用户来说是透明的，适用于用户不希望对业务进行改造的场景。Seata中除了AT模式外，还有TCC、Sage、XA三种模式，接下来我们继续研究一下TCC模式及其使用过程。</p><p>与AT模式下不需要业务改造不同，TCC分布式事务需要开发者进行业务逻辑的拆分，通常需要将业务系统的一整段逻辑分为三个阶段：</p><ul><li>Try：完成所有业务检查，预留必须的业务资源</li><li>Confirm：真正执行的业务逻辑，不做任何业务检查，只使用Try阶段预留的业务资源。因此只要Try操作成功，Confirm一定能成功</li><li>Cancel：释放Try阶段预留的业务资源，同样Cancel操作也需要满足幂等性</li></ul><p>根据上面的描述，再和AT模式进行一下对比，TCC模式具有以下特点：</p><ol><li>TCC与AT模式相同，都是二阶段提交，但是TCC对业务代码侵入性很强：</li></ol><ul><li>AT模式下，用户只需要关注自己的业务SQL，用户的业务SQL作为一阶段，Seata框架会自动生成事务的二阶段提交和回滚操作</li><li>TCC模式下，所有事务都要手动实现Try，Confirm，Cancel三个方法</li></ul><ol start="2"><li>TCC执行效率更高</li></ol><ul><li>AT模式下，在本地事务提交前，要尝试先拿到该记录的全局锁</li><li>TCC模式下，不需要对数据加全局锁，允许多个事务同时操作数据，因此TCC是高性能分布式事务的解决方案，适用于对性能有很高要求的场景</li></ul><p>接下来，在具体的业务场景中看一下TCC模式需要怎么应用。我们对上一篇中的微服务进行改造，首先修改订单服务的业务逻辑。将创建订单的操作分为3步：</p><ul><li>Try阶段，生成订单，但是将订单状态设为冻结状态，这里使用1表示订单的冻结状态，0表示正常状态：</li></ul><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3be91ffa20b04d6285e127570700cd93~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li><p>Confirm阶段，提交事务，将订单从冻结状态修改为正常状态： <img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7222deea5f3b4a40bbe223d01bd7096e~tplv-k3u1fbpfcp-zoom-1.image" alt="" loading="lazy"></p></li><li><p>Cancel阶段，回滚事务，删除订单：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c75b000b9c324a1e8e8a279d9307008e~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li></ul><p>梳理完了3段业务逻辑，下面开始写代码，使用TCC模式时，首先需要创建一个接口：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@LocalTCC</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">OrderTccAction</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@TwoPhaseBusinessAction</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;orderAction&quot;</span><span class="token punctuation">,</span>commitMethod <span class="token operator">=</span> <span class="token string">&quot;commit&quot;</span><span class="token punctuation">,</span>rollbackMethod <span class="token operator">=</span> <span class="token string">&quot;rollback&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">boolean</span> <span class="token function">createOrder</span><span class="token punctuation">(</span><span class="token class-name">BusinessActionContext</span> businessActionContext<span class="token punctuation">,</span>
                        <span class="token annotation punctuation">@BusinessActionContextParameter</span><span class="token punctuation">(</span>paramName <span class="token operator">=</span> <span class="token string">&quot;order&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Order</span> order<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> <span class="token function">commit</span><span class="token punctuation">(</span><span class="token class-name">BusinessActionContext</span> businessActionContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> <span class="token function">rollback</span><span class="token punctuation">(</span><span class="token class-name">BusinessActionContext</span> businessActionContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个接口上，要添加<code>@LocalTCC</code>注解，并且声明三个方法：</p><ol><li>这里的<code>createOrder</code>方法对应第一阶段的try阶段</li></ol><ul><li>方法中，通过注解指定第二阶段的两个方法名</li><li>方法中的参数<code>BusinessActionContext</code> 是一个上下文对象，用来在两个阶段之间传递数据。</li><li><code>@BusinessActionContextParameter</code> 注解的参数数据会被存入 <code>BusinessActionContext</code></li></ul><ol start="2"><li><code>commit</code> 为第二阶段提交操作</li><li><code>rollback</code> 为第二阶段回滚操作</li></ol><p>在实现类中，实现业务逻辑：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderTccActionImpl</span> <span class="token keyword">implements</span> <span class="token class-name">OrderTccAction</span><span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">OrderMapper</span> orderMapper<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token annotation punctuation">@Transactional</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">createOrder</span><span class="token punctuation">(</span><span class="token class-name">BusinessActionContext</span> businessActionContext<span class="token punctuation">,</span> <span class="token class-name">Order</span> order<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        order<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        orderMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>order<span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;创建订单：tcc一阶段try成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token annotation punctuation">@Transactional</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">commit</span><span class="token punctuation">(</span><span class="token class-name">BusinessActionContext</span> businessActionContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">JSONObject</span> jsonObject<span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">JSONObject</span><span class="token punctuation">)</span> businessActionContext<span class="token punctuation">.</span><span class="token function">getActionContext</span><span class="token punctuation">(</span><span class="token string">&quot;order&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Order</span> order<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Order</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">BeanUtil</span><span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>jsonObject<span class="token punctuation">,</span>order<span class="token punctuation">)</span><span class="token punctuation">;</span>
        order<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        orderMapper<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>order<span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Order</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Order</span><span class="token operator">::</span><span class="token function">getOrderNumber</span><span class="token punctuation">,</span>order<span class="token punctuation">.</span><span class="token function">getOrderNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;创建订单：tcc二阶段commit成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token annotation punctuation">@Transactional</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">rollback</span><span class="token punctuation">(</span><span class="token class-name">BusinessActionContext</span> businessActionContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">JSONObject</span> jsonObject<span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">JSONObject</span><span class="token punctuation">)</span> businessActionContext<span class="token punctuation">.</span><span class="token function">getActionContext</span><span class="token punctuation">(</span><span class="token string">&quot;order&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Order</span> order<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Order</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">BeanUtil</span><span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>jsonObject<span class="token punctuation">,</span>order<span class="token punctuation">)</span><span class="token punctuation">;</span>
        orderMapper<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Order</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Order</span><span class="token operator">::</span><span class="token function">getOrderNumber</span><span class="token punctuation">,</span>order<span class="token punctuation">.</span><span class="token function">getOrderNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;创建订单：tcc二阶段回滚成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改Service类：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span><span class="token punctuation">(</span><span class="token string">&quot;orderTccService&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderTccServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">OrderService</span><span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token class-name">OrderTccAction</span> orderTccAction<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token annotation punctuation">@GlobalTransactional</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">buy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Order</span> order<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Order</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        order<span class="token punctuation">.</span><span class="token function">setOrderNumber</span><span class="token punctuation">(</span><span class="token class-name">IdUtil</span><span class="token punctuation">.</span><span class="token function">createSnowflake</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextIdStr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setMoney</span><span class="token punctuation">(</span><span class="token number">100D</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> result <span class="token operator">=</span> orderTccAction<span class="token punctuation">.</span><span class="token function">createOrder</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> order<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// if (result){</span>
        <span class="token comment">//   throw new RuntimeException(&quot;异常测试，准备rollBack&quot;);</span>
        <span class="token comment">// }       </span>
        <span class="token keyword">return</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动微服务，进行测试，首先测试正常执行情况，两个阶段都执行成功：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/59e15ac13f0748f796dd98299bea1a00~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>把service中注释的代码放开，手动抛出异常，可以看到执行了rollback的回滚操作：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6f6054b535614199aca08f06dbded7c9~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在测试完单个微服务后，接下来测试微服务间调用下TCC分布式事务的工作情况，下面对库存服务进行改造。同样，将减少库存的操作进行拆分，假设对库存表进行操作前数据如下： <img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/40506dd6081f4402a7e42fdaba92bf67~tplv-k3u1fbpfcp-zoom-1.image" alt="" loading="lazy"></p><ul><li><p>Try阶段，从库存数量中取出预留扣减的数量，进行冻结： <img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b644903d3ff04914b988b8dd032c24d9~tplv-k3u1fbpfcp-zoom-1.image" alt="" loading="lazy"></p></li><li><p>Confirm阶段，提交事务，使用冻结的库存数量完成业务数据处理： <img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/24ad1dac7bc04f258382f795b61aac43~tplv-k3u1fbpfcp-zoom-1.image" alt="" loading="lazy"></p></li><li><p>Cancel阶段，回滚事务，将冻结的库存解冻，恢复至之前的库存数量： <img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0b6d66cf1da94d62b6fea0695fcd3c38~tplv-k3u1fbpfcp-zoom-1.image" alt="" loading="lazy"></p></li></ul><p>编写代码时同样先创建接口：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@LocalTCC</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">StockTccAction</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@TwoPhaseBusinessAction</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;stockAction&quot;</span><span class="token punctuation">,</span>commitMethod <span class="token operator">=</span> <span class="token string">&quot;commit&quot;</span><span class="token punctuation">,</span>rollbackMethod <span class="token operator">=</span> <span class="token string">&quot;rollback&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">boolean</span> <span class="token function">reduceStock</span><span class="token punctuation">(</span><span class="token class-name">BusinessActionContext</span> businessActionContext<span class="token punctuation">,</span>
                        <span class="token annotation punctuation">@BusinessActionContextParameter</span><span class="token punctuation">(</span>paramName <span class="token operator">=</span> <span class="token string">&quot;proId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> proId<span class="token punctuation">,</span>
                        <span class="token annotation punctuation">@BusinessActionContextParameter</span><span class="token punctuation">(</span>paramName <span class="token operator">=</span> <span class="token string">&quot;quantity&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> quantity<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> <span class="token function">commit</span><span class="token punctuation">(</span><span class="token class-name">BusinessActionContext</span> businessActionContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> <span class="token function">rollback</span><span class="token punctuation">(</span><span class="token class-name">BusinessActionContext</span> businessActionContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>实现类：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StockTccActionImpl</span> <span class="token keyword">implements</span> <span class="token class-name">StockTccAction</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">StockMapper</span> stockMapper<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token annotation punctuation">@Transactional</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">reduceStock</span><span class="token punctuation">(</span><span class="token class-name">BusinessActionContext</span> businessActionContext<span class="token punctuation">,</span> <span class="token class-name">Long</span> proId<span class="token punctuation">,</span> <span class="token class-name">Integer</span> quantity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Stock</span> stock <span class="token operator">=</span> stockMapper<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Stock</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Stock</span><span class="token operator">::</span><span class="token function">getProId</span><span class="token punctuation">,</span> proId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        stock<span class="token punctuation">.</span><span class="token function">setTotal</span><span class="token punctuation">(</span>stock<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>quantity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        stock<span class="token punctuation">.</span><span class="token function">setFrozen</span><span class="token punctuation">(</span>stock<span class="token punctuation">.</span><span class="token function">getFrozen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>quantity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        stockMapper<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>stock<span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;减少库存：tcc一阶段try成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token annotation punctuation">@Transactional</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">commit</span><span class="token punctuation">(</span><span class="token class-name">BusinessActionContext</span> businessActionContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">long</span> proId <span class="token operator">=</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>businessActionContext<span class="token punctuation">.</span><span class="token function">getActionContext</span><span class="token punctuation">(</span><span class="token string">&quot;proId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> quantity <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>businessActionContext<span class="token punctuation">.</span><span class="token function">getActionContext</span><span class="token punctuation">(</span><span class="token string">&quot;quantity&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Stock</span> stock <span class="token operator">=</span> stockMapper<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Stock</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Stock</span><span class="token operator">::</span><span class="token function">getProId</span><span class="token punctuation">,</span> proId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        stock<span class="token punctuation">.</span><span class="token function">setFrozen</span><span class="token punctuation">(</span>stock<span class="token punctuation">.</span><span class="token function">getFrozen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>quantity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        stock<span class="token punctuation">.</span><span class="token function">setSold</span><span class="token punctuation">(</span>stock<span class="token punctuation">.</span><span class="token function">getSold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>quantity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        stockMapper<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>stock<span class="token punctuation">)</span><span class="token punctuation">;</span>

        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;减少库存：tcc二阶段commit成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token annotation punctuation">@Transactional</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">rollback</span><span class="token punctuation">(</span><span class="token class-name">BusinessActionContext</span> businessActionContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">long</span> proId <span class="token operator">=</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">parseLong</span><span class="token punctuation">(</span>businessActionContext<span class="token punctuation">.</span><span class="token function">getActionContext</span><span class="token punctuation">(</span><span class="token string">&quot;proId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> quantity <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>businessActionContext<span class="token punctuation">.</span><span class="token function">getActionContext</span><span class="token punctuation">(</span><span class="token string">&quot;quantity&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Stock</span> stock <span class="token operator">=</span> stockMapper<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Stock</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">Stock</span><span class="token operator">::</span><span class="token function">getProId</span><span class="token punctuation">,</span> proId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        stock<span class="token punctuation">.</span><span class="token function">setTotal</span><span class="token punctuation">(</span>stock<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>quantity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        stock<span class="token punctuation">.</span><span class="token function">setFrozen</span><span class="token punctuation">(</span>stock<span class="token punctuation">.</span><span class="token function">getFrozen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>quantity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        stockMapper<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>stock<span class="token punctuation">)</span><span class="token punctuation">;</span>

        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;减少库存：tcc二阶段回滚成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>进行测试，使用FeigClient在OrderService中调用StockService：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a30c1a3e4b0f4700afbbced0f711381e~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>可以看到，在库存服务的Tcc二阶段产生了多次commit提交的问题，也就是说在二阶段可能会产生接口多次调用的问题，因此我们需要对接口进行幂等性处理。在这里添加一个幂等性处理工具类，避免try阶段方法被多次发起，以及在commit或rollback执行成功后，再次调用方法时直接返回。这里使用了Guava中的HashBasedTable类，可以简化通过两个键确定一个值的情况，从而避免Map的嵌套操作。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IdempotentUtil</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Table</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Class</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map<span class="token operator">=</span><span class="token class-name">HashBasedTable</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">addMarker</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> clazz<span class="token punctuation">,</span><span class="token class-name">String</span> xid<span class="token punctuation">,</span><span class="token class-name">String</span> marker<span class="token punctuation">)</span><span class="token punctuation">{</span>
        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span>xid<span class="token punctuation">,</span>marker<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getMarker</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> clazz<span class="token punctuation">,</span><span class="token class-name">String</span> xid<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span>xid<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">removeMarker</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> clazz<span class="token punctuation">,</span><span class="token class-name">String</span> xid<span class="token punctuation">)</span><span class="token punctuation">{</span>
        map<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span>xid<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们使用Table数据结构，维护了一个以类和事务的xid作为key，标记作为value的本地缓存。在存放标记后，在每次提交或回滚阶段，都要去检查这个标记是否存在。如果标记存在，说明是第一次执行提交或回滚，正常执行下面的业务逻辑，执行完成后，删除这个标记。如果检测后发现标记不存在，证明已经执行完成，那么直接返回，不执行后续的业务逻辑。</p><p>修改StockService，在try阶段添加标识，在三个不同阶段都要根据幂等性标识进行判断，并在commit或rollback执行完成后删除：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token annotation punctuation">@Transactional</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">reduceStock</span><span class="token punctuation">(</span><span class="token class-name">BusinessActionContext</span> businessActionContext<span class="token punctuation">,</span> <span class="token class-name">Long</span> proId<span class="token punctuation">,</span> <span class="token class-name">Integer</span> quantity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">nonNull</span><span class="token punctuation">(</span><span class="token class-name">IdempotentUtil</span><span class="token punctuation">.</span><span class="token function">getMarker</span><span class="token punctuation">(</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>businessActionContext<span class="token punctuation">.</span><span class="token function">getXid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;已执行过try阶段&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//业务逻辑，省略...</span>
    <span class="token class-name">IdempotentUtil</span><span class="token punctuation">.</span><span class="token function">addMarker</span><span class="token punctuation">(</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>businessActionContext<span class="token punctuation">.</span><span class="token function">getXid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;marker&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Override</span>
<span class="token annotation punctuation">@Transactional</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">commit</span><span class="token punctuation">(</span><span class="token class-name">BusinessActionContext</span> businessActionContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span><span class="token class-name">IdempotentUtil</span><span class="token punctuation">.</span><span class="token function">getMarker</span><span class="token punctuation">(</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>businessActionContext<span class="token punctuation">.</span><span class="token function">getXid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;已执行过commit阶段&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
   <span class="token comment">//业务逻辑，省略...</span>
    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;减少库存：tcc二阶段commit成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">IdempotentUtil</span><span class="token punctuation">.</span><span class="token function">removeMarker</span><span class="token punctuation">(</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>businessActionContext<span class="token punctuation">.</span><span class="token function">getXid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Override</span>
<span class="token annotation punctuation">@Transactional</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">rollback</span><span class="token punctuation">(</span><span class="token class-name">BusinessActionContext</span> businessActionContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span><span class="token class-name">IdempotentUtil</span><span class="token punctuation">.</span><span class="token function">getMarker</span><span class="token punctuation">(</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>businessActionContext<span class="token punctuation">.</span><span class="token function">getXid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;已执行过rollback阶段&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//业务逻辑，省略...</span>
    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;减少库存：tcc二阶段回滚成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">IdempotentUtil</span><span class="token punctuation">.</span><span class="token function">removeMarker</span><span class="token punctuation">(</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>businessActionContext<span class="token punctuation">.</span><span class="token function">getXid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再次执行查看结果：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7aa7ed930ac14f6f9001ddd790d2edc1~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>可以看到跳过了第二次的commit阶段，保证了业务代码只执行一次。同样，我们在service中手动抛出一个异常，来测试本地事务失败的情况：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/491989ed4a554445a126e7b0542a8a31~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>可以看到也不会第二次执行rollback方法，避免了重复回滚的情况。幂等性问题是在使用Seata的TCC模式中格外需要被重视的问题，因为无论是网络数据的重传，或是异常事务的补偿执行，都有可能导致Try、Confirm、Cancel阶段的操作被重复执行。只有通过幂等性的校验，我们才能确保方法无论被重复执行多少次，都能保证同样的业务结果。</p>`,44);function e(i,l){return s(),a("div",null,[t(" more "),c])}const k=n(o,[["render",e],["__file","SeataTCC.html.vue"]]);export{k as default};
