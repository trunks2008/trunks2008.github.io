import{_ as n,W as s,X as a,$ as t,Z as e}from"./framework-9e67db09.js";const o={},p=e(`<p>最近在工作中用到了一些微信开放平台授权第三方登录，来获取用户基本信息的操作。看了一下微信给出的官方文档，写的已经很详细了，这里按照自己的步骤进行了一下总结，并附带了一些示例，方便大家理解。</p><p>微信公众号进行对第三方授权的流程可分为以下四步：</p><ol><li>用户同意授权，获取<code>code</code></li><li>通过code换取网页授权<code>access_token</code></li><li>刷新<code>access_token</code>（非必须）</li><li>拉取用户信息(需<code>scope</code>为 <code>snsapi_userinfo</code>)</li></ol><p>其中正常流程中，第3步为非必须步骤，仅使用在<code>access_token</code>失效的情况下，下面对每一个步骤进行详细介绍。</p><h2 id="_1、获取code" tabindex="-1"><a class="header-anchor" href="#_1、获取code" aria-hidden="true">#</a> 1、获取code</h2><p>官方接口如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&amp;redirect_uri=REDIRECT_URI&amp;response_type=code&amp;scope=SCOPE&amp;state=STATE&amp;connect_redirect=1#wechat_redirect
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当用户确认授权登录之后，会跳转到<code>redirect_uri</code>这个地址上，并带上微信后台生成的<code>code</code>参数，在前端可对<code>code</code>进行保存，用于后续获取<code>access_token</code>。</p><p>参数说明：</p><table><thead><tr><th>参数</th><th>必须</th><th>说明</th></tr></thead><tbody><tr><td>appid</td><td>是</td><td>公众号的唯一标识</td></tr><tr><td>redirect_uri</td><td>是</td><td>授权后重定向的回调链接地址， 需使用 urlEncode 对链接进行处理</td></tr><tr><td>response_type</td><td>是</td><td>返回类型，请填写code</td></tr><tr><td>scope</td><td>是</td><td>应用授权作用域，snsapi_base 或 snsapi_userinfo</td></tr><tr><td>state</td><td>否</td><td>重定向后会带上state参数，开发者可以填写a-zA-Z0-9的参数值，最多128字节</td></tr><tr><td>#wechat_redirect</td><td>是</td><td>无论直接打开还是做页面302重定向时候，必须带此参数</td></tr></tbody></table><p>后端代码示例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Controller</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;wechat&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WeChatContraller</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;authorization&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">authorization</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">UnsupportedEncodingException</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;redirect:https://open.weixin.qq.com/connect/oauth2/authorize?&quot;</span>
                <span class="token operator">+</span> <span class="token string">&quot;?appid=&quot;</span> <span class="token operator">+</span> <span class="token class-name">WeChatUtil</span><span class="token punctuation">.</span>appid <span class="token operator">+</span> <span class="token string">&quot;&amp;redirect_uri=&quot;</span>
                <span class="token operator">+</span> <span class="token class-name">URLEncoder</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token class-name">WeChatUtil<span class="token punctuation">.</span>DomainName</span> <span class="token operator">+</span> <span class="token string">&quot;/index.html&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span>
                <span class="token operator">+</span> <span class="token string">&quot;&amp;response_type=code&amp;scope=snsapi_base&amp;state=123#wechat_redirect&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是，由于授权操作安全等级较高，所以在发起授权请求时，微信会对授权链接做正则强匹配校验，如果链接的参数顺序不对，授权页面将无法正常访问。</p><p>并且应用授权作用域在为<code>snsapi_base</code>时，不弹出授权页面，直接跳转，只能获取用户<code>openid</code>；而在<code>snsapi_userinfo</code>时弹出授权页面，后续可通过<code>openid</code>拿到昵称、性别、所在地。并且， 即使在未关注的情况下，只要用户授权，也能获取其信息。</p><h2 id="_2、获取access-token" tabindex="-1"><a class="header-anchor" href="#_2、获取access-token" aria-hidden="true">#</a> 2、获取access_token</h2><p>这里通过<code>code</code>换取一个特殊的网页授权<code>access_token</code>，官方接口如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>https://api.weixin.qq.com/sns/oauth2/access_token?appid=APPID&amp;secret=SECRET&amp;code=CODE&amp;grant_type=authorization_code
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数说明：</p><table><thead><tr><th>参数</th><th>必须</th><th>说明</th></tr></thead><tbody><tr><td>appid</td><td>是</td><td>公众号的唯一标识</td></tr><tr><td>secret</td><td>是</td><td>公众号的appsecret</td></tr><tr><td>code</td><td>是</td><td>填写第一步获取的code参数</td></tr><tr><td>grant_type</td><td>是</td><td>填写为authorization_code</td></tr></tbody></table><p>后端代码示例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@ResponseBody</span>
<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;getToken&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getToken</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;code&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> code<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;https://api.weixin.qq.com/sns/oauth2/access_token?&quot;</span>
           <span class="token operator">+</span> <span class="token string">&quot;?appid=&quot;</span> <span class="token operator">+</span> <span class="token class-name">WeChatUtil</span><span class="token punctuation">.</span>appid <span class="token operator">+</span> <span class="token string">&quot;&amp;secret=&quot;</span> <span class="token operator">+</span> <span class="token class-name">WeChatUtil</span><span class="token punctuation">.</span>appsecret
           <span class="token operator">+</span> <span class="token string">&quot;&amp;code=&quot;</span> <span class="token operator">+</span> code <span class="token operator">+</span> <span class="token string">&quot;&amp;grant_type=authorization_code&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> rs <span class="token operator">=</span> <span class="token class-name">HttpSendUtil</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">JSONObject</span> json <span class="token operator">=</span> <span class="token class-name">JSONObject</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>rs<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">==</span> json<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;errcode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> json<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;access_token&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;获取access_token出错&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里使用<code>HttpClient</code>发送<code>get</code>请求，从返回的JSON中取出<code>access_token</code>返回。正确返回的完整JSON数据包如下：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;access_token&quot;</span><span class="token operator">:</span><span class="token string">&quot;ACCESS_TOKEN&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;expires_in&quot;</span><span class="token operator">:</span><span class="token number">7200</span><span class="token punctuation">,</span>
  <span class="token property">&quot;refresh_token&quot;</span><span class="token operator">:</span><span class="token string">&quot;REFRESH_TOKEN&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;openid&quot;</span><span class="token operator">:</span><span class="token string">&quot;OPENID&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;scope&quot;</span><span class="token operator">:</span><span class="token string">&quot;SCOPE&quot;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回参数说明：</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>access_token</td><td>网页授权接口调用凭证,注意：此access_token与基础支持的access_token不同</td></tr><tr><td>expires_in</td><td>access_token接口调用凭证超时时间，单位（秒）</td></tr><tr><td>refresh_token</td><td>用户刷新access_token</td></tr><tr><td>openid</td><td>用户唯一标识</td></tr><tr><td>scope</td><td>用户授权的作用域，使用逗号（,）分隔</td></tr></tbody></table><p>错误时微信会返回JSON数据包如下（示例为code无效错误）:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;errcode&quot;</span><span class="token operator">:</span><span class="token number">40029</span><span class="token punctuation">,</span>
  <span class="token property">&quot;errmsg&quot;</span><span class="token operator">:</span><span class="token string">&quot;invalid code&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意<code>code</code>只能够使用一次，如果被消费后第二次仍然用相同<code>code</code>请求获取<code>access_token</code>则会失败。</p><h2 id="_3、刷新access-token-非必须" tabindex="-1"><a class="header-anchor" href="#_3、刷新access-token-非必须" aria-hidden="true">#</a> 3、刷新access_token（非必须）</h2><p><code>access_token</code>拥有时效性，当超时失效后可以使用<code>refresh_token</code>进行刷新，需要用户重新授权。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>https://api.weixin.qq.com/sns/oauth2/refresh_token?appid=APPID&amp;grant_type=refresh_token&amp;refresh_token=REFRESH_TOKEN
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数说明：</p><table><thead><tr><th>参数</th><th>必须</th><th>说明</th></tr></thead><tbody><tr><td>appid</td><td>是</td><td>公众号的唯一标识</td></tr><tr><td>grant_type</td><td>是</td><td>填写refresh_token</td></tr><tr><td>refresh_token</td><td>是</td><td>填写通过access_token获取到的refresh_token参数</td></tr></tbody></table><p>正确时返回的JSON数据包如下，与直接获取格式相同：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span> 
  <span class="token property">&quot;access_token&quot;</span><span class="token operator">:</span><span class="token string">&quot;ACCESS_TOKEN&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;expires_in&quot;</span><span class="token operator">:</span><span class="token number">7200</span><span class="token punctuation">,</span>
  <span class="token property">&quot;refresh_token&quot;</span><span class="token operator">:</span><span class="token string">&quot;REFRESH_TOKEN&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;openid&quot;</span><span class="token operator">:</span><span class="token string">&quot;OPENID&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;scope&quot;</span><span class="token operator">:</span><span class="token string">&quot;SCOPE&quot;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4、拉取用户信息" tabindex="-1"><a class="header-anchor" href="#_4、拉取用户信息" aria-hidden="true">#</a> 4、拉取用户信息</h2><p>如果网页授权作用域为<code>snsapi_userinfo</code>，则此时开发者可以通过<code>access_token</code>和<code>openid</code>拉取用户信息了。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>https://api.weixin.qq.com/sns/userinfo?access_token=ACCESS_TOKEN&amp;openid=OPENID&amp;lang=zh_CN
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数说明：</p><table><thead><tr><th>参数</th><th>必须</th><th>说明</th></tr></thead><tbody><tr><td>access_token</td><td>是</td><td>网页授权接口调用凭证,注意：此access_token与基础支持的access_token不同</td></tr><tr><td>openid</td><td>是</td><td>用户的唯一标识</td></tr><tr><td>lang</td><td>是</td><td>返回国家地区语言版本，zh_CN 简体，zh_TW 繁体，en 英语</td></tr></tbody></table><p>后端代码示例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@ResponseBody</span>
<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;getUserInfo&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">JSONObject</span> <span class="token function">getUserInfo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;accessToken&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> accessToken<span class="token punctuation">,</span>
                          <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;openid&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> openid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;https://api.weixin.qq.com/sns/userinfo?&quot;</span>
            <span class="token operator">+</span> <span class="token string">&quot;?access_token=&quot;</span> <span class="token operator">+</span> accessToken <span class="token operator">+</span> <span class="token string">&quot;&amp;openid=&quot;</span> <span class="token operator">+</span>openid
            <span class="token operator">+</span> <span class="token string">&quot;&amp;lang=zh_CN&quot;</span><span class="token punctuation">;</span>

    <span class="token class-name">String</span> rs <span class="token operator">=</span> <span class="token class-name">HttpSendUtil</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">JSONObject</span> json <span class="token operator">=</span> <span class="token class-name">JSONObject</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>rs<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">return</span> json<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>正确时返回的JSON数据包如下：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>   
  <span class="token property">&quot;openid&quot;</span><span class="token operator">:</span><span class="token string">&quot; OPENID&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;nickname&quot;</span><span class="token operator">:</span> NICKNAME<span class="token punctuation">,</span>
  <span class="token property">&quot;sex&quot;</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;province&quot;</span><span class="token operator">:</span><span class="token string">&quot;PROVINCE&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;city&quot;</span><span class="token operator">:</span><span class="token string">&quot;CITY&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;country&quot;</span><span class="token operator">:</span><span class="token string">&quot;COUNTRY&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;headimgurl&quot;</span><span class="token operator">:</span><span class="token string">&quot;http://thirdwx.qlogo.cn/mmopen/g3MonUZtNHkdmzicIlibx6iaFqAc56vxLSUfpb6n5WKSYVY0ChQKkiaJSgQ1dZuTOgvLLrhJbERQQ4eMsv84eavHiaiceqxibJxCfHe/46&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;privilege&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span> <span class="token string">&quot;PRIVILEGE1&quot;</span> <span class="token string">&quot;PRIVILEGE2&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;unionid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;o6_bmasdasdsad6_2sgVt7hMZOPfL&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回参数说明：</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>openid</td><td>用户的唯一标识</td></tr><tr><td>nickname</td><td>用户昵称</td></tr><tr><td>sex</td><td>用户的性别，值为1时是男性，值为2时是女性，值为0时是未知</td></tr><tr><td>province</td><td>用户个人资料填写的省份</td></tr><tr><td>city</td><td>普通用户个人资料填写的城市</td></tr><tr><td>country</td><td>国家，如中国为CN</td></tr><tr><td>headimgurl</td><td>用户头像</td></tr><tr><td>privilege</td><td>用户特权信息，json 数组</td></tr><tr><td>unionid</td><td>只有在用户将公众号绑定到微信开放平台帐号后，才会出现该字段</td></tr></tbody></table><p>错误时微信会返回JSON数据包如下（示例为openid无效）:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>  
  <span class="token property">&quot;errcode&quot;</span><span class="token operator">:</span><span class="token number">40003</span><span class="token punctuation">,</span>
  <span class="token property">&quot;errmsg&quot;</span><span class="token operator">:</span><span class="token string">&quot; invalid openid &quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是，由于公众号的<code>secret</code>和获取到的<code>access_token</code>安全级别都非常高，只能保存在服务器，不允许传给客户端。后续刷新<code>access_token</code>、通过<code>access_token</code>获取用户信息等步骤，也必须从服务器发起。</p><p>总的来说，微信开放平台授权登录这一块功能应用了OAuth2的授权码模式，如果大家对OAuth2比较了解的话，这一块内容理解起来会非常容易，如果不熟的话，可以移步看一下这篇文章：OAuth2.0授权码模式实战，希望能够帮助到大家。</p>`,50);function c(i,d){return s(),a("div",null,[t(" more "),p])}const r=n(o,[["render",c],["__file","authLogin.html.vue"]]);export{r as default};
