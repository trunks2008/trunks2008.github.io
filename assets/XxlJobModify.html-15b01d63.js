import{_ as t,W as p,X as o,$ as e,Y as n,a0 as c,a1 as l,Z as s,C as i}from"./framework-9e67db09.js";const u={},k=s('<p>哈喽大家好啊，我是Hydra。</p><p>xxl-job是一款非常优秀的任务调度中间件，轻量级、使用简单、支持分布式等优点，让它广泛应用在我们的项目中，解决了不少定时任务的调度问题。</p><p>我们都知道，在使用过程中需要先到xxl-job的任务调度中心页面上，配置<strong>执行器executor</strong>和具体的<strong>任务job</strong>，这一过程如果项目中的定时任务数量不多还好说，如果任务多了的话还是挺费工夫的。</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7aa8ce0b22674f4ca8c806276ccc24c5~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>假设项目中有上百个这样的定时任务，那么每个任务都需要走一遍绑定<code>jobHander</code>后端接口，填写<code>cron</code>表达式这个流程…</p><p>我就想问问，填多了谁能不迷糊？</p><p>于是出于功能优化（<s>偷懒</s>）这一动机，前几天我萌生了一个想法，有没有什么方法能够告别xxl-job的管理页面，能够让我不再需要到页面上去手动注册执行器和任务，实现让它们自动注册到调度中心呢。</p><h2 id="分析" tabindex="-1"><a class="header-anchor" href="#分析" aria-hidden="true">#</a> 分析</h2><p>分析一下，其实我们要做的很简单，只要在项目启动时主动注册<code>executor</code>和各个<code>jobHandler</code>到调度中心就可以了，流程如下：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bac99a7fd47d47b2ae1e075da5b692e8~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>有的小伙伴们可能要问了，我在页面上创建<strong>执行器</strong>的时候，不是有一个选项叫做<strong>自动注册</strong>吗，为什么我们这里还要自己添加新执行器？</p><p>其实这里有个误区，这里的自动注册指的是会根据项目中配置的<code>xxl.job.executor.appname</code>，将配置的机器地址自动注册到这个执行器的地址列表中。但是如果你之前没有手动创建过执行器，那么是不会给你自动添加一个新执行器到调度中心的。</p><p>既然有了想法咱们就直接开干，先到github上拉一份xxl-job的源码下来：</p>',13),r={href:"https://github.com/xuxueli/xxl-job/https://github.com/xuxueli/xxl-job/",target:"_blank",rel:"noopener noreferrer"},d=s(`<p>整个项目导入idea后，先看一下结构：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e23a017575824e499ae312c2c498cb9e~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>结合着文档和代码，先梳理一下各个模块都是干什么的：</p><ul><li><code>xxl-job-admin</code>：任务调度中心，启动后就可以访问管理页面，进行执行器和任务的注册、以及任务调用等功能了</li><li><code>xxl-job-core</code>：公共依赖，项目中使用到xxl-job时要引入的依赖包</li><li><code>xxl-job-executor-samples</code>：执行示例，分别包含了springboot版本和不使用框架的版本</li></ul><p>为了弄清楚注册和查询<code>executor</code>和<code>jobHandler</code>调用的是哪些接口，我们先从页面上去抓一个请求看看：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/81d7b56a8e43410d8d96889a843c2277~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>好了，这样就能定位到<code>xxl-job-admin</code>模块中<code>/jobgroup/save</code>这个接口，接下来可以很容易地找到源码位置：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/dd1e48a3e72d405bb001177df77bb2c2~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>按照这个思路，可以找到下面这几个关键接口：</p><ul><li><code>/jobgroup/pageList</code>：执行器列表的条件查询</li><li><code>/jobgroup/save</code>：添加执行器</li><li><code>/jobinfo/pageList</code>：任务列表的条件查询</li><li><code>/jobinfo/add</code>：添加任务</li></ul><p>但是如果直接调用这些接口，那么就会发现它会跳转到<code>xxl-job-admin</code>的的登录页面：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ab2f6695fa3b43ea86e772c422d6b50f~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>其实想想也明白，出于安全性考虑，调度中心的接口也不可能允许裸调的。那么再回头看一下刚才页面上的请求就会发现，它在<code>Headers</code>中添加了一条名为<code>XXL_JOB_LOGIN_IDENTITY</code>的<code>cookie</code>：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/35f7a395039d4c80a229eb7920bd70ab~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>至于这条<code>cookie</code>，则是在通过用户名和密码调用调度中心的<code>/login</code>接口时返回的，在返回的<code>response</code>可以直接拿到。只要保存下来，并在之后每次请求时携带，就能够正常访问其他接口了。</p><p>到这里，我们需要的5个接口就基本准备齐了，接下来准备开始正式的改造工作。</p><h2 id="改造" tabindex="-1"><a class="header-anchor" href="#改造" aria-hidden="true">#</a> 改造</h2><p>我们改造的目的是实现一个<code>starter</code>，以后只要引入这个<code>starter</code>就能实现<code>executor</code>和<code>jobHandler</code>的自动注册，要引入的关键依赖有下面两个：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.xuxueli<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>xxl-job-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.3.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-autoconfigure<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1、接口调用" tabindex="-1"><a class="header-anchor" href="#_1、接口调用" aria-hidden="true">#</a> 1、接口调用</h3><p>在调用调度中心的接口前，先把<code>xxl-job-admin</code>模块中的<code>XxlJobInfo</code>和<code>XxlJobGroup</code>这两个类拿到我们的starter项目中，用于接收接口调用的结果。</p><h4 id="登录接口" tabindex="-1"><a class="header-anchor" href="#登录接口" aria-hidden="true">#</a> 登录接口</h4><p>创建一个<code>JobLoginService</code>，在调用业务接口前，需要通过登录接口获取<code>cookie</code>，并在获取到<code>cookie</code>后，缓存到本地的<code>Map</code>中。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> loginCookie<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> url<span class="token operator">=</span>adminAddresses<span class="token operator">+</span><span class="token string">&quot;/login&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">HttpResponse</span> response <span class="token operator">=</span> <span class="token class-name">HttpRequest</span><span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">form</span><span class="token punctuation">(</span><span class="token string">&quot;userName&quot;</span><span class="token punctuation">,</span>username<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">form</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span>password<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HttpCookie</span><span class="token punctuation">&gt;</span></span> cookies <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getCookies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HttpCookie</span><span class="token punctuation">&gt;</span></span> cookieOpt <span class="token operator">=</span> cookies<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>cookie <span class="token operator">-&gt;</span> cookie<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;XXL_JOB_LOGIN_IDENTITY&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>cookieOpt<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;get xxl-job cookie error!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">String</span> value <span class="token operator">=</span> cookieOpt<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    loginCookie<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;XXL_JOB_LOGIN_IDENTITY&quot;</span><span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其他接口在调用时，直接从缓存中获取<code>cookie</code>，如果缓存中不存在则调用<code>/login</code>接口，为了避免这一过程失败，允许最多重试3次。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getCookie</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> cookieStr <span class="token operator">=</span> loginCookie<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;XXL_JOB_LOGIN_IDENTITY&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>cookieStr <span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token string">&quot;XXL_JOB_LOGIN_IDENTITY=&quot;</span><span class="token operator">+</span>cookieStr<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;get xxl-job cookie error!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="执行器接口" tabindex="-1"><a class="header-anchor" href="#执行器接口" aria-hidden="true">#</a> 执行器接口</h4><p>创建一个<code>JobGroupService</code>，根据<code>appName</code>和执行器名称<code>title</code>查询执行器列表：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XxlJobGroup</span><span class="token punctuation">&gt;</span></span> <span class="token function">getJobGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> url<span class="token operator">=</span>adminAddresses<span class="token operator">+</span><span class="token string">&quot;/jobgroup/pageList&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">HttpResponse</span> response <span class="token operator">=</span> <span class="token class-name">HttpRequest</span><span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">form</span><span class="token punctuation">(</span><span class="token string">&quot;appname&quot;</span><span class="token punctuation">,</span> appName<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">form</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span> title<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">cookie</span><span class="token punctuation">(</span>jobLoginService<span class="token punctuation">.</span><span class="token function">getCookie</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">String</span> body <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">JSONArray</span> array <span class="token operator">=</span> <span class="token class-name">JSONUtil</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getByPath</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> <span class="token class-name">JSONArray</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XxlJobGroup</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> <span class="token class-name">JSONUtil</span><span class="token punctuation">.</span><span class="token function">toBean</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">JSONObject</span><span class="token punctuation">)</span> o<span class="token punctuation">,</span> <span class="token class-name">XxlJobGroup</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> list<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们在后面要根据配置文件中的<code>appName</code>和<code>title</code>判断当前执行器是否已经被注册到调度中心过，如果已经注册过那么则跳过，而<code>/jobgroup/pageList</code>接口是一个模糊查询接口，所以在查询列表的结果列表中，还需要再进行一次精确匹配。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">preciselyCheck</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XxlJobGroup</span><span class="token punctuation">&gt;</span></span> jobGroup <span class="token operator">=</span> <span class="token function">getJobGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XxlJobGroup</span><span class="token punctuation">&gt;</span></span> has <span class="token operator">=</span> jobGroup<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>xxlJobGroup <span class="token operator">-&gt;</span> xxlJobGroup<span class="token punctuation">.</span><span class="token function">getAppname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>appName<span class="token punctuation">)</span>
                    <span class="token operator">&amp;&amp;</span> xxlJobGroup<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">findAny</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> has<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注册新<code>executor</code>到调度中心：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">autoRegisterGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> url<span class="token operator">=</span>adminAddresses<span class="token operator">+</span><span class="token string">&quot;/jobgroup/save&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">HttpResponse</span> response <span class="token operator">=</span> <span class="token class-name">HttpRequest</span><span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">form</span><span class="token punctuation">(</span><span class="token string">&quot;appname&quot;</span><span class="token punctuation">,</span> appName<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">form</span><span class="token punctuation">(</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span> title<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">cookie</span><span class="token punctuation">(</span>jobLoginService<span class="token punctuation">.</span><span class="token function">getCookie</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Object</span> code <span class="token operator">=</span> <span class="token class-name">JSONUtil</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getByPath</span><span class="token punctuation">(</span><span class="token string">&quot;code&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> code<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="任务接口" tabindex="-1"><a class="header-anchor" href="#任务接口" aria-hidden="true">#</a> 任务接口</h4><p>创建一个<code>JobInfoService</code>，根据执行器<code>id</code>，<code>jobHandler</code>名称查询任务列表，和上面一样，也是模糊查询：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XxlJobInfo</span><span class="token punctuation">&gt;</span></span> <span class="token function">getJobInfo</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> jobGroupId<span class="token punctuation">,</span><span class="token class-name">String</span> executorHandler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> url<span class="token operator">=</span>adminAddresses<span class="token operator">+</span><span class="token string">&quot;/jobinfo/pageList&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">HttpResponse</span> response <span class="token operator">=</span> <span class="token class-name">HttpRequest</span><span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">form</span><span class="token punctuation">(</span><span class="token string">&quot;jobGroup&quot;</span><span class="token punctuation">,</span> jobGroupId<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">form</span><span class="token punctuation">(</span><span class="token string">&quot;executorHandler&quot;</span><span class="token punctuation">,</span> executorHandler<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">form</span><span class="token punctuation">(</span><span class="token string">&quot;triggerStatus&quot;</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">cookie</span><span class="token punctuation">(</span>jobLoginService<span class="token punctuation">.</span><span class="token function">getCookie</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">String</span> body <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">JSONArray</span> array <span class="token operator">=</span> <span class="token class-name">JSONUtil</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getByPath</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> <span class="token class-name">JSONArray</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XxlJobInfo</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> <span class="token class-name">JSONUtil</span><span class="token punctuation">.</span><span class="token function">toBean</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">JSONObject</span><span class="token punctuation">)</span> o<span class="token punctuation">,</span> <span class="token class-name">XxlJobInfo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> list<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注册一个新任务，最终返回创建的新任务的<code>id</code>：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">addJobInfo</span><span class="token punctuation">(</span><span class="token class-name">XxlJobInfo</span> xxlJobInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> url<span class="token operator">=</span>adminAddresses<span class="token operator">+</span><span class="token string">&quot;/jobinfo/add&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> paramMap <span class="token operator">=</span> <span class="token class-name">BeanUtil</span><span class="token punctuation">.</span><span class="token function">beanToMap</span><span class="token punctuation">(</span>xxlJobInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">HttpResponse</span> response <span class="token operator">=</span> <span class="token class-name">HttpRequest</span><span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">form</span><span class="token punctuation">(</span>paramMap<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">cookie</span><span class="token punctuation">(</span>jobLoginService<span class="token punctuation">.</span><span class="token function">getCookie</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">JSON</span> json <span class="token operator">=</span> <span class="token class-name">JSONUtil</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Object</span> code <span class="token operator">=</span> json<span class="token punctuation">.</span><span class="token function">getByPath</span><span class="token punctuation">(</span><span class="token string">&quot;code&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>code<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Convert</span><span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span><span class="token function">getByPath</span><span class="token punctuation">(</span><span class="token string">&quot;content&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;add jobInfo error!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、创建新注解" tabindex="-1"><a class="header-anchor" href="#_2、创建新注解" aria-hidden="true">#</a> 2、创建新注解</h3><p>在创建任务时，必填字段除了执行器和<code>jobHandler</code>之外，还有<strong>任务描述</strong>、<strong>负责人</strong>、<strong>Cron表达式</strong>、<strong>调度类型</strong>、<strong>运行模式</strong>。在这里，我们默认调度类型为<code>CRON</code>、运行模式为<code>BEAN</code>，另外的3个字段的信息需要用户指定。</p><p>因此我们需要创建一个新注解<code>@XxlRegister</code>，来配合原生的<code>@XxlJob</code>注解进行使用，填写这几个字段的信息：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">METHOD</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">XxlRegister</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> <span class="token function">cron</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> <span class="token function">jobDesc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;default jobDesc&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> <span class="token function">author</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;default Author&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token function">triggerStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后，额外添加了一个<code>triggerStatus</code>属性，表示任务的默认调度状态，0为停止状态，1为运行状态。</p><h3 id="_3、自动注册核心" tabindex="-1"><a class="header-anchor" href="#_3、自动注册核心" aria-hidden="true">#</a> 3、自动注册核心</h3><p>基本准备工作做完后，下面实现自动注册执行器和<code>jobHandler</code>的核心代码。核心类实现<code>ApplicationListener</code>接口，在接收到<code>ApplicationReadyEvent</code>事件后开始执行自动注册逻辑。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">XxlJobAutoRegister</span> <span class="token keyword">implements</span> <span class="token class-name">ApplicationListener</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ApplicationReadyEvent</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">,</span> 
        <span class="token class-name">ApplicationContextAware</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Log</span> log <span class="token operator">=</span><span class="token class-name">LogFactory</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">ApplicationContext</span> applicationContext<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">JobGroupService</span> jobGroupService<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">JobInfoService</span> jobInfoService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">ApplicationContext</span> applicationContext<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">BeansException</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>applicationContext<span class="token operator">=</span>applicationContext<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onApplicationEvent</span><span class="token punctuation">(</span><span class="token class-name">ApplicationReadyEvent</span> event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">addJobGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//注册执行器</span>
        <span class="token function">addJobInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//注册任务</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>自动注册执行器的代码非常简单，根据配置文件中的<code>appName</code>和<code>title</code>精确匹配查看调度中心是否已有执行器被注册过了，如果存在则跳过，不存在则新注册一个：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">addJobGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>jobGroupService<span class="token punctuation">.</span><span class="token function">preciselyCheck</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span>jobGroupService<span class="token punctuation">.</span><span class="token function">autoRegisterGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;auto register xxl-job group success!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>自动注册任务的逻辑则相对复杂一些，需要完成：</p><ul><li>通过<code>applicationContext</code>拿到spring容器中的所有bean，再拿到这些bean中所有添加了<code>@XxlJob</code>注解的方法</li><li>对上面获取到的方法进行检查，是否添加了我们自定义的<code>@XxlRegister</code>注解，如果没有则跳过，不进行自动注册</li><li>对同时添加了<code>@XxlJob</code>和<code>@XxlRegister</code>的方法，通过执行器id和<code>jobHandler</code>的值判断是否已经在调度中心注册过了，如果已存在则跳过</li><li>对于满足注解条件且没有注册过的<code>jobHandler</code>，调用接口注册到调度中心</li></ul><p>具体代码如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">addJobInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XxlJobGroup</span><span class="token punctuation">&gt;</span></span> jobGroups <span class="token operator">=</span> jobGroupService<span class="token punctuation">.</span><span class="token function">getJobGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">XxlJobGroup</span> xxlJobGroup <span class="token operator">=</span> jobGroups<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> beanDefinitionNames <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBeanNamesForType</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> beanDefinitionName <span class="token operator">:</span> beanDefinitionNames<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Object</span> bean <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>beanDefinitionName<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Method</span><span class="token punctuation">,</span> <span class="token class-name">XxlJob</span><span class="token punctuation">&gt;</span></span> annotatedMethods  <span class="token operator">=</span> <span class="token class-name">MethodIntrospector</span><span class="token punctuation">.</span><span class="token function">selectMethods</span><span class="token punctuation">(</span>bean<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">MethodIntrospector<span class="token punctuation">.</span>MetadataLookup</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XxlJob</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token class-name">XxlJob</span> <span class="token function">inspect</span><span class="token punctuation">(</span><span class="token class-name">Method</span> method<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token class-name">AnnotatedElementUtils</span><span class="token punctuation">.</span><span class="token function">findMergedAnnotation</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> <span class="token class-name">XxlJob</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Method</span><span class="token punctuation">,</span> <span class="token class-name">XxlJob</span><span class="token punctuation">&gt;</span></span> methodXxlJobEntry <span class="token operator">:</span> annotatedMethods<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Method</span> executeMethod <span class="token operator">=</span> methodXxlJobEntry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">XxlJob</span> xxlJob <span class="token operator">=</span> methodXxlJobEntry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//自动注册</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>executeMethod<span class="token punctuation">.</span><span class="token function">isAnnotationPresent</span><span class="token punctuation">(</span><span class="token class-name">XxlRegister</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">XxlRegister</span> xxlRegister <span class="token operator">=</span> executeMethod<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">XxlRegister</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XxlJobInfo</span><span class="token punctuation">&gt;</span></span> jobInfo <span class="token operator">=</span> jobInfoService<span class="token punctuation">.</span><span class="token function">getJobInfo</span><span class="token punctuation">(</span>xxlJobGroup<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> xxlJob<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>jobInfo<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token comment">//因为是模糊查询，需要再判断一次</span>
                    <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XxlJobInfo</span><span class="token punctuation">&gt;</span></span> first <span class="token operator">=</span> jobInfo<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>xxlJobInfo <span class="token operator">-&gt;</span> xxlJobInfo<span class="token punctuation">.</span><span class="token function">getExecutorHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>xxlJob<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>first<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token keyword">continue</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token class-name">XxlJobInfo</span> xxlJobInfo <span class="token operator">=</span> <span class="token function">createXxlJobInfo</span><span class="token punctuation">(</span>xxlJobGroup<span class="token punctuation">,</span> xxlJob<span class="token punctuation">,</span> xxlRegister<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Integer</span> jobInfoId <span class="token operator">=</span> jobInfoService<span class="token punctuation">.</span><span class="token function">addJobInfo</span><span class="token punctuation">(</span>xxlJobInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、自动装配" tabindex="-1"><a class="header-anchor" href="#_4、自动装配" aria-hidden="true">#</a> 4、自动装配</h3><p>创建一个配置类，用于扫描<code>bean</code>：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@ComponentScan</span><span class="token punctuation">(</span>basePackages <span class="token operator">=</span> <span class="token string">&quot;com.xxl.job.plus.executor&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">XxlJobPlusConfig</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将它添加到<code>META-INF/spring.factories</code>文件：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span>EnableAutoConfiguration</span><span class="token operator">=</span>\\
  <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>xxl<span class="token punctuation">.</span>job<span class="token punctuation">.</span>plus<span class="token punctuation">.</span>executor<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span>XxlJobPlusConfig</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>到这里<code>starter</code>的编写就完成了，可以通过maven发布jar包到本地或者私服：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>mvn clean install/deploy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h2><p>新建一个springboot项目，引入我们在上面打好的包：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.cn.hydra<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>xxljob-autoregister-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在<code>application.properties</code>中配置xxl-job的信息，首先是原生的配置内容：</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">xxl.job.admin.addresses</span><span class="token punctuation">=</span><span class="token value attr-value">http://127.0.0.1:8080/xxl-job-admin</span>
<span class="token key attr-name">xxl.job.accessToken</span><span class="token punctuation">=</span><span class="token value attr-value">default_token</span>
<span class="token key attr-name">xxl.job.executor.appname</span><span class="token punctuation">=</span><span class="token value attr-value">xxl-job-executor-test</span>
<span class="token key attr-name">xxl.job.executor.address</span><span class="token punctuation">=</span>
<span class="token key attr-name">xxl.job.executor.ip</span><span class="token punctuation">=</span><span class="token value attr-value">127.0.0.1</span>
<span class="token key attr-name">xxl.job.executor.port</span><span class="token punctuation">=</span><span class="token value attr-value">9999</span>
<span class="token key attr-name">xxl.job.executor.logpath</span><span class="token punctuation">=</span><span class="token value attr-value">/data/applogs/xxl-job/jobhandler</span>
<span class="token key attr-name">xxl.job.executor.logretentiondays</span><span class="token punctuation">=</span><span class="token value attr-value">30</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此外还要额外添加我们自己的starter要求的新配置内容：</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># admin用户名</span>
<span class="token key attr-name">xxl.job.admin.username</span><span class="token punctuation">=</span><span class="token value attr-value">admin</span>
<span class="token comment"># admin 密码</span>
<span class="token key attr-name">xxl.job.admin.password</span><span class="token punctuation">=</span><span class="token value attr-value">123456</span>
<span class="token comment"># 执行器名称</span>
<span class="token key attr-name">xxl.job.executor.title</span><span class="token punctuation">=</span><span class="token value attr-value">test-title</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>完成后在代码中配置一下<code>XxlJobSpringExecutor</code>，然后在测试接口上添加原生<code>@XxlJob</code>注解和我们自定义的<code>@XxlRegister</code>注解：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@XxlJob</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;testJob&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@XxlRegister</span><span class="token punctuation">(</span>cron <span class="token operator">=</span> <span class="token string">&quot;0 0 0 * * ? *&quot;</span><span class="token punctuation">,</span>
        author <span class="token operator">=</span> <span class="token string">&quot;hydra&quot;</span><span class="token punctuation">,</span>
        jobDesc <span class="token operator">=</span> <span class="token string">&quot;测试job&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;#公众号：码农参上&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token annotation punctuation">@XxlJob</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;testJob222&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@XxlRegister</span><span class="token punctuation">(</span>cron <span class="token operator">=</span> <span class="token string">&quot;59 1-2 0 * * ?&quot;</span><span class="token punctuation">,</span>
        triggerStatus <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testJob2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;#作者：Hydra&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@XxlJob</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;testJob444&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@XxlRegister</span><span class="token punctuation">(</span>cron <span class="token operator">=</span> <span class="token string">&quot;59 59 23 * * ?&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testJob4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;hello xxl job&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动项目，可以看到执行器自动注册成功：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d4ba662c1acb4b1d92ef69c4788db9f1~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>再打开调度中心的任务管理页面，可以看到同时添加了两个注解的任务也已经自动完成了注册：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0044c46514d54e4d8b09954188c9fe5d~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>从页面上手动执行任务进行测试，可以执行成功：</p><figure><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f9f14a42d0104411857ee1a9ebdf5faa~tplv-k3u1fbpfcp-zoom-1.image" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>到这里，starter的编写和测试过程就算基本完成了，项目中引入后，以后也能省出更多的时间来<s>摸鱼</s>学习了~</p><h2 id="最后" tabindex="-1"><a class="header-anchor" href="#最后" aria-hidden="true">#</a> 最后</h2><p>项目的完整代码已经传到了我的github上，小伙伴们如果有需要的可以在我的公众号后台回复【xxl】获取，也欢迎来给我点个star支持一下~</p><p>那么，这次的分享就到这里，我是Hydra，我们下篇再见。</p>`,78);function v(m,b){const a=i("ExternalLinkIcon");return p(),o("div",null,[e(" more "),k,n("blockquote",null,[n("p",null,[n("a",r,[c("https://github.com/xuxueli/xxl-job/https://github.com/xuxueli/xxl-job/"),l(a)])])]),d])}const f=t(u,[["render",v],["__file","XxlJobModify.html.vue"]]);export{f as default};
