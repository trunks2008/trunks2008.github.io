import{_ as n,W as s,X as a,$ as t,Z as p}from"./framework-9e67db09.js";const c={},e=p(`<p>在之前的文章中我们介绍了微信小程序的支付流程，这一篇接着讲一下小程序的退款流程，首先看一下官方给出的介绍：</p><blockquote><p>当交易发生之后一段时间内，由于买家或者卖家的原因需要退款时，卖家可以通过退款接口将支付款退还给买家，微信支付将在收到退款请求并且验证成功之后，按照退款规则将支付款按原路退到买家帐号上。</p></blockquote><p>和付款流程不同，退款流程不再需要在前端页面额外调用微信接口，可由后端独立完成。可分为以下3步：</p><ul><li>服务后端发送退款请求</li><li>接收微信同步返回结果</li><li>接收微信调用回调接口返回异步消息</li></ul><h2 id="_1、调用微信退款接口" tabindex="-1"><a class="header-anchor" href="#_1、调用微信退款接口" aria-hidden="true">#</a> 1、调用微信退款接口</h2><p>生成退款参数及发送请求方法如下，和付款的统一支付接口相同，首先需要对请求中的参数进行签名，之后再发送<code>http</code>请求：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">refund</span><span class="token punctuation">(</span><span class="token class-name">String</span> orderNumber<span class="token punctuation">,</span> <span class="token class-name">String</span> refundNumber<span class="token punctuation">,</span> <span class="token keyword">double</span> totalFee<span class="token punctuation">,</span> <span class="token keyword">double</span> refundFee<span class="token punctuation">,</span> <span class="token class-name">String</span> notifyUrl<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">int</span> totalMoney <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Double</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>totalFee <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//转换为分</span>
   <span class="token keyword">int</span> refundMoney <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Double</span><span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>refundFee <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//转换为分</span>

   <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> wxMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   wxMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;appid&quot;</span><span class="token punctuation">,</span> mpCommonProperty<span class="token punctuation">.</span><span class="token function">getAppid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   wxMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;mch_id&quot;</span><span class="token punctuation">,</span> mpCommonProperty<span class="token punctuation">.</span><span class="token function">getMuchId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   wxMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;nonce_str&quot;</span><span class="token punctuation">,</span> <span class="token constant">UUID</span><span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   wxMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;notify_url&quot;</span><span class="token punctuation">,</span> mpCommonProperty<span class="token punctuation">.</span><span class="token function">getServerDomain</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> notifyUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
   wxMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;out_refund_no&quot;</span><span class="token punctuation">,</span> refundNumber<span class="token punctuation">)</span><span class="token punctuation">;</span>
   wxMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;out_trade_no&quot;</span><span class="token punctuation">,</span> orderNumber<span class="token punctuation">)</span><span class="token punctuation">;</span>
   wxMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;refund_fee&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>refundMoney<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   wxMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;total_fee&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>totalMoney<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   wxMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;sign&quot;</span><span class="token punctuation">,</span> mpPayUtil<span class="token punctuation">.</span><span class="token function">signCommon</span><span class="token punctuation">(</span>wxMap<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token class-name">String</span> refundXml <span class="token operator">=</span> <span class="token class-name">XmlUtil</span><span class="token punctuation">.</span><span class="token function">generateXmlFromMap</span><span class="token punctuation">(</span>wxMap<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name">String</span> url <span class="token operator">=</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>api<span class="token punctuation">.</span>mch<span class="token punctuation">.</span>weixin<span class="token punctuation">.</span>qq<span class="token punctuation">.</span>com<span class="token operator">/</span>secapi<span class="token operator">/</span>pay<span class="token operator">/</span>refund&quot;<span class="token punctuation">;</span>

   <span class="token class-name">String</span> xmlResult <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
   <span class="token keyword">try</span> <span class="token punctuation">{</span>
       xmlResult <span class="token operator">=</span> mpCertificateUtil<span class="token punctuation">.</span><span class="token function">doWxpayRequest</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> refundXml<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;xmlResult:&quot;</span> <span class="token operator">+</span> xmlResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">return</span> xmlResult<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参数说明：</p><ul><li><code>orderNumber</code>：需要执行退款的订单号</li><li><code>refundNumber</code>：业务系统生成的退款单号</li><li><code>totalFee</code>：订单总金额，如果业务系统单位为元，需要在发送请求前转化为分</li><li><code>refundFee</code>：本次退款金额，同上</li><li><code>notifyUrl</code>：接收通知的回调接口地址</li></ul><p>微信退款支持一笔订单分多次退款，上面的方法可以用于执行部分退款操作，如果是执行一次性全部退款的话，那么可以重载上面的方法，减少传入的参数：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">refund</span><span class="token punctuation">(</span><span class="token class-name">String</span> orderNumber<span class="token punctuation">,</span><span class="token keyword">double</span> totalFee<span class="token punctuation">,</span><span class="token class-name">String</span> notifyUrl<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">refund</span><span class="token punctuation">(</span>orderNumber<span class="token punctuation">,</span>orderNumber<span class="token punctuation">,</span>totalFee<span class="token punctuation">,</span>totalFee<span class="token punctuation">,</span>notifyUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意，和付款发送请求不同的是这里不能直接发起http请求，需要使用微信商户平台生成的证书。证书的申请流程也不复杂，登录商户平台，在账户中心点击申请API证书，下载证书工具后通过验证商户信息可以自动生成。在生成完<code>pkcs12</code>证书后，在每次发送退款请求时需要携带证书的信息。</p><p>下面是证书工具类，提供加载证书及发送携带证书的请求功能：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MPCertificateUtil</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token class-name">MPCommonProperty</span> mpCommonProperty<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 加载证书文件流，通过hex解析为16进制存到静态变量里
    */</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">parseCertificateFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">String</span> haxString<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">ClassPathResource</span> classPathResource<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ClassPathResource</span><span class="token punctuation">(</span>mpCommonProperty<span class="token punctuation">.</span><span class="token function">getCertFilePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">InputStream</span> inputStream<span class="token operator">=</span>classPathResource<span class="token punctuation">.</span><span class="token function">getStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            haxString <span class="token operator">=</span> <span class="token class-name">Hex</span><span class="token punctuation">.</span><span class="token function">encodeHexString</span><span class="token punctuation">(</span><span class="token class-name">StreamUtils</span><span class="token punctuation">.</span><span class="token function">copyToByteArray</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;fileError:&quot;</span><span class="token operator">+</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> haxString<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 发送微信携带证书请求
    */</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">doWxpayRequest</span><span class="token punctuation">(</span><span class="token class-name">String</span> httpurl<span class="token punctuation">,</span> <span class="token class-name">String</span> strxml<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> cert <span class="token operator">=</span> <span class="token function">parseCertificateFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>cert<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;cert is null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">CloseableHttpClient</span> client <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">HttpPost</span> httpPost <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// 解密出16进制原证书文件内容为字节数组</span>
            <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> <span class="token class-name">Hex</span><span class="token punctuation">.</span><span class="token function">decodeHex</span><span class="token punctuation">(</span>cert<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">ByteArrayInputStream</span> input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">KeyStore</span> clientTrustKeyStore <span class="token operator">=</span> <span class="token class-name">KeyStore</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">&quot;PKCS12&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            clientTrustKeyStore<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span> mpCommonProperty<span class="token punctuation">.</span><span class="token function">getMuchId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">KeyManagerFactory</span> kmf <span class="token operator">=</span> <span class="token class-name">KeyManagerFactory</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token class-name">KeyManagerFactory</span><span class="token punctuation">.</span><span class="token function">getDefaultAlgorithm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            kmf<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>clientTrustKeyStore<span class="token punctuation">,</span> mpCommonProperty<span class="token punctuation">.</span><span class="token function">getMuchId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">TrustManager</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tm <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token keyword">new</span> <span class="token class-name">MyX509TrustManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token class-name">SSLContext</span> sslContext <span class="token operator">=</span> <span class="token class-name">SSLContext</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">&quot;TLSv1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            sslContext<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>kmf<span class="token punctuation">.</span><span class="token function">getKeyManagers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> tm<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span>SecureRandom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">SSLConnectionSocketFactory</span> sslsf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SSLConnectionSocketFactory</span><span class="token punctuation">(</span>sslContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
            client <span class="token operator">=</span> <span class="token class-name">HttpClients</span><span class="token punctuation">.</span><span class="token function">custom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSSLSocketFactory</span><span class="token punctuation">(</span>sslsf<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            httpPost <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpPost</span><span class="token punctuation">(</span>httpurl<span class="token punctuation">)</span><span class="token punctuation">;</span>
            httpPost<span class="token punctuation">.</span><span class="token function">setEntity</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringEntity</span><span class="token punctuation">(</span>strxml<span class="token punctuation">,</span> <span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">CloseableHttpResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>httpPost<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">StatusLine</span> statusLine <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getStatusLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">HttpEntity</span> entity <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>statusLine<span class="token punctuation">.</span><span class="token function">getStatusCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token class-name">EntityUtils</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>entity<span class="token punctuation">,</span> <span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">throw</span> e<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>client <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                client<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的代码中，读取了项目目录下的<code>pkcs12</code>证书文件，但是微信在官方文档中更加推荐不要将证书放在web服务器的虚拟目录下，通过放在有权限控制的目录中，防止被他人下载。</p><h2 id="_2、接收同步返回结果" tabindex="-1"><a class="header-anchor" href="#_2、接收同步返回结果" aria-hidden="true">#</a> 2、接收同步返回结果</h2><p>在发送完携带证书的http请求后，同步返回结果格式如下所示，接收到下面的信息后可以根据业务需求存入数据库中进行备案：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>xml</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>return_code</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[SUCCESS]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>return_code</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>return_msg</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[OK]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>return_msg</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appid</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[wx2421b1c4370ec43b]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appid</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mch_id</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[10000100]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mch_id</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nonce_str</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[NfsMFbUFpdbEhPXP]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nonce_str</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sign</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[B7274EB9F8925EB93100DD2085FA56C0]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sign</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result_code</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[SUCCESS]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>result_code</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transaction_id</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[1008450740201411110005820873]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transaction_id</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>out_trade_no</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[1415757673]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>out_trade_no</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>out_refund_no</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[1415701182]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>out_refund_no</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>refund_id</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[2008450740201411110000174436]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>refund_id</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>refund_channel</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>refund_channel</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>refund_fee</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>refund_fee</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>xml</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意返回结果中的<code>return_code</code>为<code>SUCCESS</code>时，只表示退款申请被微信服务器接收成功，并不是退款执行成功，退款的结果会在回调接口中被返回。</p><h2 id="_3、接收异步通知结果" tabindex="-1"><a class="header-anchor" href="#_3、接收异步通知结果" aria-hidden="true">#</a> 3、接收异步通知结果</h2><p>在退款执行成功或因某种原因执行失败后，微信会调用之前在发起请求时我们填写的回调接口地址，会把退款的结果以异步通知的形式发送给我们：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;refundFallBack&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">refundFallBack</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">BufferedReader</span> reader <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">,</span> <span class="token class-name">Charset</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> line <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>line <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;getBodyString错误！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>reader <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                reader<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token class-name">ExceptionUtils</span><span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token class-name">String</span> resultXml<span class="token punctuation">;</span>
    <span class="token class-name">String</span> bodyXml <span class="token operator">=</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> xmlResult <span class="token operator">=</span> <span class="token class-name">XmlUtil</span><span class="token punctuation">.</span><span class="token function">parseXmlToMap</span><span class="token punctuation">(</span>bodyXml<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;SUCCESS&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>xmlResult<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;return_code&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> reqInfo <span class="token operator">=</span> xmlResult<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;req_info&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> decode <span class="token operator">=</span> <span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>reqInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> md5Hash <span class="token operator">=</span> <span class="token class-name">Md5Utils</span><span class="token punctuation">.</span><span class="token function">hash</span><span class="token punctuation">(</span><span class="token class-name">WechatConstants</span><span class="token punctuation">.</span>muchSecret<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">//AES解密</span>
            <span class="token class-name">String</span> result <span class="token operator">=</span> <span class="token class-name">AESUtils</span><span class="token punctuation">.</span><span class="token function">decryptData</span><span class="token punctuation">(</span>decode<span class="token punctuation">,</span> md5Hash<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> resultMap <span class="token operator">=</span> <span class="token class-name">XmlUtil</span><span class="token punctuation">.</span><span class="token function">parseXmlToMap</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//执行业务逻辑...</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        resultXml<span class="token operator">=</span><span class="token class-name">WechatConstants</span><span class="token punctuation">.</span><span class="token constant">FALLBACK_SUCCESS_XML</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        resultXml<span class="token operator">=</span> <span class="token class-name">WechatConstants</span><span class="token punctuation">.</span><span class="token constant">FALLBACK_FAIL_XML</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">ServletOutputStream</span> outputStream <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    outputStream<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>resultXml<span class="token punctuation">)</span><span class="token punctuation">;</span>
    outputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看出，异步返回通知并不能够被直接拿来解析使用，在使用过程中还进行了一次解密，这是因为返回的报文格式如下：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>xml</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>return_code</span><span class="token punctuation">&gt;</span></span>SUCCESS<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>return_code</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>appid</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[wx2421b1c4370ec43b]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>appid</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mch_id</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[10000100]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mch_id</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nonce_str</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[TeqClE3i0mvn3DrK]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nonce_str</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>req_info</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[T87GAHG17TGAHG1TGHAHAHA1Y1CIOA9UGJH1GAHV871HAGAGQYQQPOOJMXNBCXBVNMNMAJAA]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>req_info</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>xml</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中<code>req_info</code>为加密信息，需要对其进行解密，解密步骤如下：</p><ul><li>对加密串A做<code>base64</code>解码，得到加密串B</li><li>对商户key做<code>md5</code>加密，得到32位小写<code>key*</code></li><li>用<code>key*</code>对加密串B做<code>AES-256-ECB</code>解密</li></ul><p><code>AES</code>解密工具类实现如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AESUtils</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">decryptData</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> base64Data<span class="token punctuation">,</span><span class="token class-name">String</span> md5Hash<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">Security</span><span class="token punctuation">.</span><span class="token function">addProvider</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>bouncycastle<span class="token punctuation">.</span>jce<span class="token punctuation">.</span>provider<span class="token punctuation">.</span></span>BouncyCastleProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//加解密算法/工作模式/填充方式</span>
        <span class="token class-name">Cipher</span> cipher <span class="token operator">=</span> <span class="token class-name">Cipher</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">&quot;AES/ECB/PKCS7Padding&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SecretKeySpec</span> key <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SecretKeySpec</span><span class="token punctuation">(</span>md5Hash<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;AES&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cipher<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">Cipher</span><span class="token punctuation">.</span><span class="token constant">DECRYPT_MODE</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>cipher<span class="token punctuation">.</span><span class="token function">doFinal</span><span class="token punctuation">(</span>base64Data<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解密完成后，得到真正包含退款信息的xml报文：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>out_refund_no</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[131811191610442717309]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>out_refund_no</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>out_trade_no</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[71106718111915575302817]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>out_trade_no</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>refund_account</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[REFUND_SOURCE_RECHARGE_FUNDS]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>refund_account</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>refund_fee</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[3960]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>refund_fee</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>refund_id</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[50000408942018111907145868882]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>refund_id</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>refund_recv_accout</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[支付用户零钱]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>refund_recv_accout</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>refund_request_source</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[API]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>refund_request_source</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>refund_status</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[SUCCESS]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>refund_status</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settlement_refund_fee</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[3960]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settlement_refund_fee</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settlement_total_fee</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[3960]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settlement_total_fee</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>success_time</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[2018-11-19 16:24:13]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>success_time</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>total_fee</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[3960]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>total_fee</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transaction_id</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[4200000215201811190261405420]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transaction_id</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再对上面的报文进行解析，执行业务系统中对退款流程的后续处理即可。同样，我们需要按照微信规定的格式返回接收成功的报文，并在每次处理前验证通知消息的幂等性。</p><p>在退款中还踩到了一个坑，如果在微信的商户平台中，开启了自动提现功能，那么会自动将基本账户内的资金全提现至结算银行卡中，隔日到账。这样如果被结算过的订单在被退款时商户平台也没有基本余额，就会报错提示“基本余额不足，请充值后重新发起退款”，所以最好先关闭自动提现，待订单超过退款周期后再对其进行结算，避免发起退款不成功的情况。</p>`,32);function o(l,u){return s(),a("div",null,[t(" more "),e])}const k=n(c,[["render",o],["__file","refund.html.vue"]]);export{k as default};
