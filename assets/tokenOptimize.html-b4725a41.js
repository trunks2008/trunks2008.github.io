const t=JSON.parse('{"key":"v-7ec03d03","path":"/springcloud/tokenOptimize.html","title":"微服务中，如何优化接口调用","lang":"zh-CN","frontmatter":{"title":"微服务中，如何优化接口调用","icon":"page","order":8,"author":"Hydra","date":"2021-05-17T00:00:00.000Z","tag":["服务调用"],"star":true,"description":"在微服务的设计中，我们通常考虑到的是通过加密、熔断、限流等操作保证接口的安全性、健壮性等问题，但是在代码的编写中，你考虑过优化接口的调用方式吗？下面我们就来看一看，如何更优雅的调用接口。 假设在我们的系统中现在有两个微服务，订单服务和库存服务，业务流程是当使用订单服务创建订单时，先调用库存服务查询是否有库存，如果有库存才能完成订单的下单操作。 先从简单...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/springcloud/tokenOptimize.html"}],["meta",{"property":"og:site_name","content":"码农参上"}],["meta",{"property":"og:title","content":"微服务中，如何优化接口调用"}],["meta",{"property":"og:description","content":"在微服务的设计中，我们通常考虑到的是通过加密、熔断、限流等操作保证接口的安全性、健壮性等问题，但是在代码的编写中，你考虑过优化接口的调用方式吗？下面我们就来看一看，如何更优雅的调用接口。 假设在我们的系统中现在有两个微服务，订单服务和库存服务，业务流程是当使用订单服务创建订单时，先调用库存服务查询是否有库存，如果有库存才能完成订单的下单操作。 先从简单..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-03T05:56:54.000Z"}],["meta",{"property":"article:author","content":"Hydra"}],["meta",{"property":"article:tag","content":"服务调用"}],["meta",{"property":"article:published_time","content":"2021-05-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-03T05:56:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"微服务中，如何优化接口调用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-05-17T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-03T05:56:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hydra\\"}]}"]]},"headers":[],"git":{"createdTime":1680501414000,"updatedTime":1680501414000,"contributors":[{"name":"trunks2008","email":"jialegeyou1111@163.com","commits":1}]},"readingTime":{"minutes":6.27,"words":1881},"filePathRelative":"springcloud/tokenOptimize.md","localizedDate":"2021年5月17日","autoDesc":true}');export{t as data};
